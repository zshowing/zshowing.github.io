<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Design &amp; Code</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zshowing.github.io/"/>
  <updated>2016-09-22T09:35:34.000Z</updated>
  <id>http://zshowing.github.io/</id>
  
  <author>
    <name>Jon Showing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Advanced Self-Examination and Status Analyze II</title>
    <link href="http://zshowing.github.io/2016/09/22/Advanced-Self-Examination-and-Status-Analyze-II/"/>
    <id>http://zshowing.github.io/2016/09/22/Advanced-Self-Examination-and-Status-Analyze-II/</id>
    <published>2016-09-22T07:01:52.000Z</published>
    <updated>2016-09-22T09:35:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>是的，本课程在<a href="/2016/08/06/Advanced-Self-Examination-and-Status-Analyze/">第一级</a>落幕仅仅一个月之后，就迎来了第二级。</p>
<p>上一篇的视角比较高，是从迄今为止的所有人生中总结的经验，而这一篇的视角则聚焦在今年3月辞职后到现在的半年间，准备记录一些尝试和相关的思考。</p>
<p>这几个月的生活，可以分成几个阶段：</p>
<h2 id="关键词：休整-（2月-4月）"><a href="#关键词：休整-（2月-4月）" class="headerlink" title="关键词：休整 （2月 - 4月）"></a>关键词：休整 （2月 - 4月）</h2><p>别人都是Gap year，我这算是过了个Gap quarter.</p>
<p>在4月底的时候，我在日记里做了个阶段性总结，作为进入下一阶段前的终章：</p>
<table>
<thead>
<tr>
<th>日期</th>
<th>事件</th>
</tr>
</thead>
<tbody>
<tr>
<td>2.4 - 2.8</td>
<td>发烧养病</td>
</tr>
<tr>
<td>2.9 - 2.21</td>
<td>春节各种串亲戚相关事务 &amp; The Last of Us &amp; 整理高中毕业就没管过的各种杂物</td>
</tr>
<tr>
<td>2.22 - 2.24</td>
<td>为朋友<a href="/2016/02/24/visual-design-for-Simptrue/">设计公司Logo</a>，去同学的公司面试</td>
</tr>
<tr>
<td>2.25 - 2.29</td>
<td>继续整理杂志和杂物，前同事的公司电话面试，文明5</td>
</tr>
<tr>
<td>3.1 - 3.7</td>
<td>准备签证资料，递签，继续整理屋子和书柜</td>
</tr>
<tr>
<td>3.8 - 3.28</td>
<td>写朋友介绍的私活项目，规划英国之行的路线、联系airbnb等，豆瓣面试</td>
</tr>
<tr>
<td>3.29 - 4.17</td>
<td>英国</td>
</tr>
<tr>
<td>4.18 - 4.26</td>
<td>调时差，整理行李，完成The Last of Us</td>
</tr>
</tbody>
</table>
<p><br></p>
<p>看完了六部剧（Mad Men S7, A to Z S1, 高堡奇人S1，Sherlock S2，Fargo S1 &amp; S2）；<br>看掉了三部电影（The Intern, Zootopia, 怪物之子）；<br>看完了一部纪录片（The Making of The Last of Us）；<br>打穿了一部游戏（The Last of Us）；<br>看完了两本书（The Art of The Last of Us, 配色设计原理）；<br>在现场看了场演唱会（BabyMetal!!）；<br>去了一个之前没去过的国家（U.K）。</p>
<p>以上写于4月26日。</p>
<p>接下来的事情：</p>
<ul>
<li>设计图标；</li>
<li>按招聘要求弥补一些知识漏洞；</li>
<li>个人网站计划；</li>
<li>了解出国的可能性；</li>
<li>个人iOS项目；</li>
<li>读书。</li>
</ul>
<p>以上写于4月28日。</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79gw1f82dri8yrlj21kw16ox4p.jpg" alt=""></p>
<p>这阶段没太多好讲的，除了把心心念念的游戏打完，去英国当了次BM教徒之外，就算是彻底和之前的日子做了个了结吧——我的房间里从高中毕业后就一直堆在那里没心气儿整理的几个大箱子终于被一点点清空了，没有个整块的时间（花了两周多！）真是不敢启动这么大的工程。</p>
<h2 id="关键词：设计-（5月-6月）"><a href="#关键词：设计-（5月-6月）" class="headerlink" title="关键词：设计 （5月 - 6月）"></a>关键词：设计 （5月 - 6月）</h2><p>上面的工作列表中排在第一位的是设计图标，这是受到一个正在创业的朋友的委托——某种程度上讲是照顾，因为她知道我对这一方面有兴趣。另外，前面提到的设计公司Logo也是给她们做的方案（见<a href="/2016/02/24/visual-design-for-Simptrue/">《Simptrue企业VI视觉设计策划案》</a>），只不过最终在竞标中败给了专业设计师。</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f82a9oqt7rj21kw11xatq.jpg" alt=""></p>
<p>等这个设计告一段落之后，我的另一个夙愿又浮上心头，就是上面列表中的第三点。一直以来，我都有个自己设计一个属于自己的个人主页的想法，这次终于有整块的时间来搞一搞了。从搜集相关作品，到出设计图，到做资源，到写代码，差不多弄了一个月。（虽然，中间又夹杂了两局文明5和一部动漫 =.=）<br>（设计过程详见另一篇<a href="https://www.douban.com/note/566496095/）" target="_blank" rel="external">https://www.douban.com/note/566496095/）</a></p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79gw1f82a4p2p6ij21kw0zkjz8.jpg" alt=""></p>
<p>最后的结论是，在这方面要想真正做点东西，果然还是需要相当长的储备才行。至于成为理想中的自由职业者，更是差得太远。年初时曾经对离职后的生活充满憧憬（<a href="/2016/01/01/Summary-of-2015/">《Bye, 2015》</a>），到这时已经觉察出有点图森破乃衣服了。</p>
<h2 id="关键词：单词-（7月）"><a href="#关键词：单词-（7月）" class="headerlink" title="关键词：单词 （7月）"></a>关键词：单词 （7月）</h2><p>于是我想到了之前一直没认真考虑过的事情：留学。这也是上面的列表中紧随个人网站，排名倒数第三的议题。</p>
<p>所以，一整个7月份，我都在一边看《废柴联盟》，一边背单词。</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f82aqu1wbej21kw16mdva.jpg" alt=""></p>
<p>差不多背了两三周之后，我开始跟进阅读。而这一阅读，发现了问题。</p>
<p>正像我之前那篇文章所写：</p>
<blockquote>
<p>阅读速度非常差劲，建议15-17分钟完成的阅读，计时完成时间普遍在30分钟以上；<br>前几天试着看了一下&lt;Lord of the Flies&gt;，只读了4页，在Evernote里作了整整一页的笔记，花了一个小时<br>…</p>
</blockquote>
<p>这不是在短时间内能突击的能力——就算是，再加上口语和作品集这两个坑，考虑到申请的deadline和目前的存款，这样做下去显然没有意义。</p>
<p>于是8月初的时候，我写了上面提到的<a href="/2016/08/06/Advanced-Self-Examination-and-Status-Analyze/">《Advanced Self-Examination and Status Analyze》</a>这篇文章，标志着正式转向下一个阶段。</p>
<h2 id="关键词：学习-（8月-9月）"><a href="#关键词：学习-（8月-9月）" class="headerlink" title="关键词：学习 （8月 - 9月）"></a>关键词：学习 （8月 - 9月）</h2><p>这个关键词对应的是上面工作列表中的第二项“按招聘要求弥补一些知识漏洞”和最后一项“读书”。至此，4月份列的任务，已经全部进入生活轨道。</p>
<p>这几个月断续或主动或被动地参加了几场面试，我更进一步地意识到，当初自己所怀的那些信心都是虚假的信心（一月份一个猎头说我这种经历在市场上比较抢手；二月份应邀去同学公司面试顺利拿到offer等），而三月份在豆瓣的面试才是实际情况。</p>
<p>而在网上补漏洞的时候浏览了很多blog，更是发现自己的差距。</p>
<p>我是真的念了两句诗：悟已往之不谏，知来者之可追。</p>
<p>还能怎么办呢，只能一点点追赶。</p>
<p>8月13日，补完《TCP/IP详解 卷一》；<br>8月17日，补完《Database Systems》；<br>8月24日，补完《深入理解计算机系统》；<br>9月2日，大致补完《算法（第四版）》（这本书其实从离职前就开始慢慢看了）……</p>
<p>然后开始继续补这几年间业界的blog，并且萌生了“我在上个项目里明明也有可以分享的地方啊”的想法——这才诞生了现在这个博客。</p>
<p>之前几年，在技术上所有的着眼点都是解决问题，虽然也想过写点什么，但总觉得没得写。</p>
<p>在阅读了大量博文后我才明白，这种想法只是因为缺少一种心态和思路而已。</p>
<p>——一种经营自己的心态，和一种刨根问底的思路。</p>
<p>对前者的说明，最好的例子是唐巧的<a href="http://blog.devtang.com/2014/01/08/why-we-need-write/" target="_blank" rel="external">《作为码农，我们为什么要写作》</a>一文中提到的“影响力”一节：</p>
<blockquote>
<p>当你持续的写作，坚持一年以上，你就会慢慢收获影响力。这个时候，你也会收到技术大会的分享邀请，出版社的约稿邀请，著名互联网公司的工作邀请，甚至是创业项目的合伙人邀请。你相比那些不分享的人，获得了更多的机会。</p>
</blockquote>
<p>确实如此，你不发声，没人认识你。</p>
<p>因此有时想想我会感谢之前拒掉我的公司，正是这几个月间的曲折让我领悟到了这些。如果当时我如愿进了那家公司，现在怕是还自我感觉良好地装逼呢吧。</p>
<h2 id="关键词：工作-（现在）"><a href="#关键词：工作-（现在）" class="headerlink" title="关键词：工作 （现在）"></a>关键词：工作 （现在）</h2><p>自我提升的感觉固然好，但时间久了也会有些缺乏方向。</p>
<p>更现实的问题是，没有工作会面临经济收入和人际交往的双重停摆。这不是件好的事情。</p>
<p>所以，我建立起了这个博客，花了大概五天时间写了上篇博文<a href="/2016/09/21/the-rewrite-of-ChinaMetro-V4-0/">《地铁通4.0版iOS客户端重写中的一些经验》</a>（我几乎是按写毕业论文的规格来写的），以准备面试。</p>
<p>所以……加油吧，不管是大厂，还是创业公司，只要是能提升自己的地方，都是好的。不用怕丢脸，也不用怕挫败，what doesn’t kill you will make you stronger.</p>
<p>May the force be with you.</p>
<p><br><br><br></p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79gw1f82dg02wcvj20ff0p1qad.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      工作五年后的Gap quarter，和跳出舒适区后的思考。
    
    </summary>
    
      <category term="Life" scheme="http://zshowing.github.io/categories/Life/"/>
    
    
      <category term="Career" scheme="http://zshowing.github.io/tags/Career/"/>
    
      <category term="Life" scheme="http://zshowing.github.io/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>地铁通4.0版iOS客户端重写中的一些经验</title>
    <link href="http://zshowing.github.io/2016/09/21/the-rewrite-of-ChinaMetro-V4-0/"/>
    <id>http://zshowing.github.io/2016/09/21/the-rewrite-of-ChinaMetro-V4-0/</id>
    <published>2016-09-21T03:30:22.000Z</published>
    <updated>2016-09-21T07:41:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p><a href="https://itunes.apple.com/cn/app/tie-tong-touchchina-quan-guo/id530096786?mt=8" target="_blank" rel="external">地铁通</a>是一款覆盖了国内全部和国外部分已开通地铁城市的导航类应用，入选了苹果的AppStore精华，至今仍在地铁关键字搜索排名第一。迄今为止（注：2016年2月）iOS版的总下载数为237万，苹果后台显示的日活跃用户约为5万。</p>
<p>我是从2013年起接手的这个应用，在那之前是一个在中国定居的法国同事<a href="https://www.linkedin.com/in/kevintingwingyuen" target="_blank" rel="external">Kevin</a>搭起的总体架构，在SVN显示的第一次提交是2012年6月14日。在这漫长的时间里，由于可以想象的项目进度和迭代压力，重写架构这种费力不讨好的事儿自然一直没法安排。</p>
<p>事实上，小规模的重构（即，单个页面规模）一直在进行，在2014年8月的一个版本我由于花了很大力气重构得比较狠，还恶搞苹果的Jony Ive，用他的口吻做了几页宣传PPT：</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f7wyleayk0j20z00iwjsq.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f7wylci9t9j20z00iwdih.jpg" alt=""></p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7wyldc3a8j20z00jatci.jpg" alt=""></p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7wylcuyzjj20z00jgq63.jpg" alt=""></p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79jw1f7wylcmw7pj20z00j2juh.jpg" alt=""></p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7wylbywtgj20z00jg0t1.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f7wylby2xej20z00iwt8s.jpg" alt=""></p>
<p>（此处有掌声）  </p>
<p>尽管如此，更大规模，或者说，更底层的架构级重构还是一直没时间进行。由于横跨多个业务场景，这种级别的重构工作势必占用几周的完整时间，还要进行彻底的测试。作为一家创业公司是承受不起的。</p>
<p>直到我决定要离职，出于一种代码洁癖和少许的社会责任感（我觉得在我之后怕是没人能做得起这种量级的代码调整了，难道就把这一坨四年历史的充满补丁的垃圾留给200多万用户吗？），外加一股想要自我救赎的冲动（我认为，能自己把自己的烂代码改掉是一种自我救赎），我向Boss提出了重构申请，作为离职前的最后一个项目。</p>
<p>地铁通4.0项目就这么立项了。</p>
<h2 id="程序概貌"><a href="#程序概貌" class="headerlink" title="程序概貌"></a>程序概貌</h2><p>在深入讲解之前，我先整体介绍一下地铁通这款app的大致组成。</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7xjpm7k50j20ku112n4x.jpg" width="50%"></p>
<p>如上面的主界面截图，地铁通的主要功能就是显示地铁图和查询两个站点间的最佳换乘路线，大概的模块划分如下：</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7xleabzvzj21h016eten.jpg" alt=""></p>
<h2 id="现存问题"><a href="#现存问题" class="headerlink" title="现存问题"></a>现存问题</h2><p>接下来，让我们分析一下在3.x版本的地铁通里面都存在哪些需要改进的问题。</p>
<h3 id="ViewController职责过多"><a href="#ViewController职责过多" class="headerlink" title="ViewController职责过多"></a>ViewController职责过多</h3><p>这可以说是任何一个未精心设计过架构的iOS App必然会导致的结果，在苹果的MVC架构中，ViewController这一级是最容易膨胀的，业界风起云涌的诸如MVVM等架构正是为了解决这种问题。</p>
<p>具体到项目中，比如在展示搜索结果的<code>线路结果页</code>中，当线路数据传到这个页面时，需要再次加工才能获得该页面所需要的信息（比如哪个站是换乘站、一共需要换乘几次、计算合理的末班车时间等），而这个工作全部放到了当前ViewController中进行。再加上其他一些处理逻辑，导致这个ViewController变得极端臃肿，达到了令人发指的3000多行。</p>
<p>再比如切换不同城市地铁的<code>城市列表页</code>中，由于没有做好适当的分层，导致这个ViewController除了显示城市列表的任务之外，还承担了：</p>
<ul>
<li>点选切换城市之后的数据初始化工作；</li>
<li>点选开始下载后的进度更新逻辑，甚至下载完成后的解压逻辑；</li>
<li>点选删除城市之后的数据清理工作；</li>
<li>…</li>
</ul>
<h3 id="耦合过紧"><a href="#耦合过紧" class="headerlink" title="耦合过紧"></a>耦合过紧</h3><p>从上面的结构模块示意图中可以看出，在不同模块之间存在着错综复杂的强依赖，其中尤以<code>DataSource</code>最为严重，因为在整个App运行期间都要保持不同界面的某种数据一致性。虽然在之前的架构中特地抽象出了DataSource这个单例，但各个模块间都是直接对其进行操作，不仅繁琐、容易出错，从架构的角度来看，某些底层的操作完全不应该由最上层的ViewController来做。</p>
<p>再举个例子，在3.x版本的地图控件中（即上图的<code>TileView</code>），存在着大量处理和用户交互的代码逻辑，甚至还有用户点选起点和终点后直接对<code>DataSource</code>进行更新的逻辑。过紧的耦合导致了不必要的判断，到现在我都无法完全搞清之前同事写的下面这几行代码中，那两个神奇的数字到底是干嘛的：</p>
<figure class="highlight objc"><table><tr><td class="code"><pre><div class="line"><span class="built_in">NSInteger</span> tag = <span class="number">-1</span>;</div><div class="line"><span class="keyword">if</span> ([sender isKindOfClass:[<span class="built_in">UIButton</span> <span class="keyword">class</span>]]) &#123;</div><div class="line">    <span class="built_in">UIButton</span> *tmpBtn = (<span class="built_in">UIButton</span> *)sender;</div><div class="line">    tag = tmpBtn.tag;</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span> (sender == bubbleView.startBtn || tag == <span class="number">888</span> || tag == <span class="number">887</span>) &#123; <span class="comment">// WTF??</span></div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="产品逻辑混乱"><a href="#产品逻辑混乱" class="headerlink" title="产品逻辑混乱"></a>产品逻辑混乱</h3><p>这条看起来可能有点甩锅的意思，但实际情况确实如此：如果有哪条逻辑写起来非常拧巴，或者连描述起来都拧巴的时候，你可以去认真思考一下，是不是从产品设计上就出了问题。</p>
<p>虽然从流程上讲，这种上溯应该扼杀在需求评审之类的时机，但从实际执行的角度，已经完成的功能并不代表就是不可更改的。尤其在发现那部分代码已经成为维护地狱的时候，应该当机立断进行修正。</p>
<p>比如在书签/历史线路页面，以前产品的需求是查询过的站点和线路按时间逆序混杂在一起显示，这样导致的结果就是，在构造这个页面时需要大量的动态判断逻辑来区分每个cell到底是什么东西：</p>
<figure class="highlight objc"><table><tr><td class="code"><pre><div class="line"><span class="built_in">NSObject</span> *obj = [historyMArray objectAtIndex:row];</div><div class="line"><span class="keyword">if</span> ([obj isKindOfClass:[<span class="built_in">NSDictionary</span> <span class="keyword">class</span>]]) &#123;</div><div class="line">    ...</div><div class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> ([obj isKindOfClass:[Route <span class="keyword">class</span>]])&#123;</div><div class="line">    ...</div><div class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> ([obj isKindOfClass:[<span class="built_in">NSArray</span> <span class="keyword">class</span>]])&#123;</div><div class="line">    ...</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> cell;</div></pre></td></tr></table></figure>
<p>而如果把页面分为若干个section显示，不仅从根源上杜绝了这种混乱的逻辑，从产品的角度也使用户一眼看上去更加清晰。</p>
<h3 id="页面布局方式过时"><a href="#页面布局方式过时" class="headerlink" title="页面布局方式过时"></a>页面布局方式过时</h3><p>可能对于大部分现有的App来说，这已经不算是个问题，但对于一个有着几年历史的App，基本上最早的那些界面依然是用绝对坐标进行定位的；加载一个动态生成的UI时，也是一点点计算后再<code>addSubview</code>上去，或者修改某个控件的<code>frame.size.height</code>来更新其高度。这种做法不仅不优雅，更重要的是不直观。一切不直观的代码都会导致以下几点问题：</p>
<ul>
<li>开发时难以调试；</li>
<li>出现bug时难以维护；</li>
<li>拿到新需求时难以修改。</li>
</ul>
<p>所谓的KISS原则（Keep It Simple &amp; Stupid），指的就是这样的场景。</p>
<p><br></p>
<p>知道了现有的问题，下面要做的就是一些合理的规划了。</p>
<h2 id="架构设计"><a href="#架构设计" class="headerlink" title="架构设计"></a>架构设计</h2><p>有了上面所述的教训，在设计新版架构的时候，从最开始就确立了几条原则：</p>
<ol>
<li>尽量打散耦合，只在有必要的情况下采用紧耦合；</li>
<li>切记合理封装，每个模块严格只负责自己的事务；</li>
<li>争取保持简洁，遇到复杂的实现换用简单的设计。</li>
</ol>
<p>下面是我当时在日记本上画的下载模块的层次结构示意图：</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79gw1f7y17wt9lbj21kw0yoe0i.jpg" alt=""></p>
<p>每一层之间仅保留最基本的数据请求和数据反馈。</p>
<p>新的结构图大概是这个样子：</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79gw1f7y26hsd5tj21g412m44r.jpg" alt=""></p>
<p>最明显的区别就是把模块之间的紧耦合变成了虚线显示的Notification，并且去掉了所有跨级调用。</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>在开始项目之前，一个要做的选择是，要用原有的Objective-C还是新生的Swift？</p>
<p>最终我选择了Swift。理由是：</p>
<ol>
<li>Swift经过几年的发展，已经趋于稳定；</li>
<li>此次重写的目标就是要面向未来，而Swift就是未来；</li>
<li>借机学习新的技术。</li>
</ol>
<p>然后，我用”Swift best practices”作为关键词搜索进行了一番调研，尽量从最开始就站在巨人的肩膀上，往正确的方向走。</p>
<p>比如这篇：<a href="https://github.com/futurice/ios-good-practices" target="_blank" rel="external">https://github.com/futurice/ios-good-practices</a></p>
<p>一些在项目中采纳的点：</p>
<h3 id="使用struct来定义常量"><a href="#使用struct来定义常量" class="headerlink" title="使用struct来定义常量"></a>使用<code>struct</code>来定义常量</h3><p>在Objective-C时代经常用<code>#define</code>来定义常量，现在可以使用<code>struct</code>来定义。比如：<br>    <figure class="highlight swift"><table><tr><td class="code"><pre><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">CMConfig</span> </span>&#123;</div><div class="line">    <span class="keyword">static</span> <span class="keyword">let</span> <span class="type">AppName</span>: <span class="type">String</span>          = <span class="string">"xxx"</span></div><div class="line">    <span class="keyword">static</span> <span class="keyword">let</span> <span class="type">AppStoreID</span> : <span class="type">UInt</span>        = <span class="number">8888</span></div><div class="line">    <span class="keyword">static</span> <span class="keyword">let</span> <span class="type">WeiboKey</span>: <span class="type">String</span>         = <span class="string">"8888"</span></div><div class="line">    <span class="keyword">static</span> <span class="keyword">let</span> <span class="type">WeiboAppSecret</span>: <span class="type">String</span>   = <span class="string">"8888"</span></div><div class="line">    <span class="keyword">static</span> <span class="keyword">let</span> <span class="type">AppStoreURL</span>: <span class="type">NSURL</span>       = <span class="type">NSURL</span>(string: <span class="string">"itms-apps://itunes.apple.com/cn/app/bei-jing-de-tie-touchchina/id530096786"</span>)!</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这样可以最大程度地利用Swift<em>类型安全</em>的语言特性，使你在编译期就可以检查出一些低级的失误。</p>
<h3 id="使用Asset-Catalogs来图像资源文件"><a href="#使用Asset-Catalogs来图像资源文件" class="headerlink" title="使用Asset Catalogs来图像资源文件"></a>使用<code>Asset Catalogs</code>来图像资源文件</h3><p>之前的图像资源管理非常混乱，不仅所有文件混杂在目录中，而且每个资源对应着两到三个不同分辨率的@2x, @3x传统位图。</p>
<p>采取Asset Catalog进行统一管理后，不仅工程干净清爽了许多，还可以用一张矢量图来让XCode自动为你生成不同分辨率的资源。记得我刚才说的“面向未来”吗？xD</p>
<p>（没错，矢量图是我自己拿Adobe Illustrator重绘的。）</p>
<h3 id="设定合理的Logging策略"><a href="#设定合理的Logging策略" class="headerlink" title="设定合理的Logging策略"></a>设定合理的Logging策略</h3><p>之前的项目中一直采用<code>NSLog</code>，这样的弊端是在正式上线的App中很难把所有NSLog都屏蔽掉，而这些输出的记录会影响程序效能，还可能泄露隐私。</p>
<p>如果在一开始就设定合理的Logging分级机制，这样在打发布包的时候只需把Looging Level调高（甚至可以在切换scheme的时候自动进行调整），就能杜绝上述问题。</p>
<h3 id="使用预处理标志"><a href="#使用预处理标志" class="headerlink" title="使用预处理标志"></a>使用预处理标志</h3><p>直接看图：<br>    <img src="http://ww2.sinaimg.cn/large/5613ec79jw1f7yui16xaej20y3046q44.jpg" alt=""></p>
<p>使用Preprocessor Symbol的好处是什么呢？还以刚才的常量定义为例：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">CMConfig</span> </span>&#123;</div><div class="line">    ...</div><div class="line">#<span class="keyword">if</span> <span class="type">Debug</span></div><div class="line">    <span class="keyword">static</span> <span class="keyword">let</span> <span class="type">BaseURL</span> : <span class="type">NSURL</span>          = <span class="type">NSURL</span>(string: <span class="string">"https://test.itouchchina.com"</span>)!</div><div class="line">    <span class="keyword">static</span> <span class="keyword">let</span> <span class="type">CMBPushMode</span> : <span class="type">BPushMode</span>  = <span class="type">BPushMode</span>.<span class="type">Development</span></div><div class="line">    <span class="keyword">static</span> <span class="keyword">let</span> <span class="type">CMLogLevel</span> : <span class="type">SLogLevel</span>   = <span class="type">SLogLevel</span>.<span class="type">Verbose</span> <span class="comment">// 百度推送模式</span></div><div class="line">    <span class="keyword">static</span> <span class="keyword">let</span> <span class="type">CMDebugStatus</span> : <span class="type">Bool</span>     = <span class="literal">true</span></div><div class="line">    <span class="keyword">static</span> <span class="keyword">let</span> <span class="type">CMHeaderClass</span>: <span class="type">String</span>    = <span class="string">"test"</span></div><div class="line">#<span class="keyword">else</span></div><div class="line">    <span class="keyword">static</span> <span class="keyword">let</span> <span class="type">BaseURL</span> : <span class="type">NSURL</span>          = <span class="type">NSURL</span>(string: <span class="string">"https://production.itouchchina.com"</span>)!</div><div class="line">    <span class="keyword">static</span> <span class="keyword">let</span> <span class="type">CMBPushMode</span> : <span class="type">BPushMode</span>  = <span class="type">BPushMode</span>.<span class="type">Production</span></div><div class="line">    <span class="keyword">static</span> <span class="keyword">let</span> <span class="type">CMLogLevel</span> : <span class="type">SLogLevel</span>   = <span class="type">SLogLevel</span>.<span class="type">Error</span></div><div class="line">    <span class="keyword">static</span> <span class="keyword">let</span> <span class="type">CMDebugStatus</span> : <span class="type">Bool</span>     = <span class="literal">false</span></div><div class="line">    <span class="keyword">static</span> <span class="keyword">let</span> <span class="type">CMHeaderClass</span>: <span class="type">String</span>    = <span class="string">"production"</span></div><div class="line">#endif</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如此便可以一劳永逸地解决各种常量在开发版和正式版中的切换问题，你从此可以忘掉它，在切换scheme的时候一切都会自动调整，免去了可能的错误。</p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79jw1f7yyy6rullj20b606mdgl.jpg" alt=""></p>
<p>如果你有更多的scheme，希望更细粒度地进行控制，可以使用Swift Flag:</p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79jw1f7yxhrdxltj20tb04yq3v.jpg" alt=""></p>
<p>在此不再赘述。</p>
<h3 id="使用CocoaPods进行第三方库管理"><a href="#使用CocoaPods进行第三方库管理" class="headerlink" title="使用CocoaPods进行第三方库管理"></a>使用CocoaPods进行第三方库管理</h3><p>这点应该大家都熟悉，<strong>谁用谁知道</strong>。</p>
<h2 id="详细分析"><a href="#详细分析" class="headerlink" title="详细分析"></a>详细分析</h2><p>下面选几个有代表性的页面，分别说明一下改进的细节。</p>
<h3 id="城市列表页"><a href="#城市列表页" class="headerlink" title="城市列表页"></a>城市列表页</h3><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><ol>
<li>如前所述，UI层代码、交互层代码、响应层代码和数据处理以及初始化代码没有合理分离。</li>
<li><p>城市的下载状态没有一个统一的位置持有。<br> 设计者的本意是通过进入该页面时生成的一个包含所有City实例的<code>NSArray</code>管理，可一旦开始下载，就要涉及<code>DownloadManager</code>模块里面的下载状态和当前页面数组中的状态之间的同步等一系列问题。<br> 同时，我们会发现每次在设置城市的下载状态时都会进行很多判断，这些判断还有不少是重复的。更严重的问题是，一个后续的错误状态也许会覆盖掉之前设置过的正确状态（因为在局部没有足够的上下文信息对状态进行充分的判断）。</p>
<p> 举个例子：</p>
 <figure class="highlight objc"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> (cell.state == <span class="built_in">CGListTableCellStateEdit</span>) &#123;</div><div class="line">    <span class="built_in">NSString</span> * versionFile = getCGDocumentPath([<span class="built_in">NSString</span> stringWithFormat: <span class="string">@"guides/guide%d/current.version"</span>, [guide.metroAppId intValue]]);</div><div class="line">    <span class="built_in">NSString</span> * version = [<span class="built_in">NSString</span> stringWithContentsOfFile: versionFile encoding: <span class="built_in">NSUTF8StringEncoding</span> error: <span class="literal">nil</span>];</div><div class="line">    <span class="built_in">NSFileManager</span> * fm = [<span class="built_in">NSFileManager</span> defaultManager];</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> ([fm fileExistsAtPath:versionFile]) &#123;</div><div class="line">        <span class="keyword">if</span> ((version != <span class="literal">nil</span>) &amp;&amp; ([guide.guideupdate compare: version] != <span class="built_in">NSOrderedSame</span>))</div><div class="line">            cell.guide.cellState = <span class="built_in">CGListTableCellStateUpdate</span>;</div><div class="line">        <span class="keyword">else</span></div><div class="line">            cell.guide.cellState = <span class="built_in">CGListTableCellStateDownloaded</span>;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">        cell.guide.cellState = <span class="built_in">CGListTableCellStateDownloaded</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    [<span class="keyword">self</span> reloadTableView];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> 这只是一个简单的当用户点击一个<strong>编辑状态</strong>的城市时应该采取的动作，但此处的实现居然恐怖到动用了一个<code>NSFileManager</code>！而这一切仅仅是为了判断这个城市应该回复到<strong>已下载</strong>状态还是<strong>有更新</strong>状态。</p>
<p> 类似的代码还可以见到好几处（在该页搜索<code>NSFileManager</code>，有多达19个结果！）。</p>
</li>
<li><p>最后一个问题也是上面提到的，搭建UI采用绝对坐标。<br> 甚至有这样恶心的代码：</p>
 <figure class="highlight objc"><table><tr><td class="code"><pre><div class="line">- (<span class="keyword">void</span>)formatUI&#123;</div><div class="line">    <span class="built_in">CGSize</span> size = [cityNameLabel.text sizeWithFont:cityNameLabel.font];</div><div class="line">    <span class="built_in">CGRect</span> rect;</div><div class="line">    rect = cityNameLabel.frame;</div><div class="line">    rect.size.width = size.width;</div><div class="line">    cityNameLabel.frame = rect;</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> (size.width &gt; <span class="number">74</span>) &#123; <span class="comment">// Why 74?</span></div><div class="line">        <span class="built_in">CGRect</span> rect;</div><div class="line">        rect = sizeLabel.frame;</div><div class="line">        rect.origin.x = <span class="number">80</span> + size.width - <span class="number">74</span>; <span class="comment">// ???</span></div><div class="line">        sizeLabel.frame = rect;</div><div class="line">    </div><div class="line">        ...</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h4><h5 id="下载管理"><a href="#下载管理" class="headerlink" title="下载管理"></a>下载管理</h5><p>在地铁通4.0中，我把所有对下载状态的管理一概收到了下载模块<code>CMDataAPI</code>中，现在获取下载状态只要一行：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><div class="line"><span class="keyword">var</span> currentMode: <span class="type">CMCityListCellMode</span> = <span class="type">CMDataAPI</span>.sharedInstance.getModeForCity(city)</div></pre></td></tr></table></figure>
<p>在<code>getModeForCity(_city: CMCity)</code>的实现中，只需遍历下载和解压两个队列，如果有必要对结果再进行时间戳的比对即可。（顺便，我把下载的时间戳迁移到了<code>NSUserDefaults</code>里，避免了文件操作，并在运行时做了缓存。）</p>
<h5 id="进度更新"><a href="#进度更新" class="headerlink" title="进度更新"></a>进度更新</h5><p>而下载进度和解压进度的更新，也被封装成了两个方法，只暴露给调用页面需要的参数（之前的版本中，解压进度甚至是无法查看的）：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">hookUpDownloadingProgress</span></span></div><div class="line">        <span class="params">(_progress: <span class="params">(<span class="params">(UInt, Int64, Int64)</span></span></span> -&gt; <span class="type">Void</span>)?,</div><div class="line">        success: (<span class="type">CMCity</span> -&gt; <span class="type">Void</span>)?,</div><div class="line">        failure: (<span class="type">CMCity</span> -&gt; <span class="type">Void</span>)?,</div><div class="line">        forCity city: <span class="type">CMCity</span>)&#123;</div><div class="line">        ...</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">hookUpUnzippingProgess</span></span></div><div class="line">        <span class="params">(_progress: <span class="params">(<span class="params">(Int, Int)</span></span></span> -&gt; <span class="type">Void</span>)?,</div><div class="line">        success: (<span class="type">CMCity</span> -&gt; <span class="type">Void</span>)?,</div><div class="line">        forCity: city: <span class="type">CMCity</span>)&#123;</div><div class="line">        ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="与地图页的解耦合"><a href="#与地图页的解耦合" class="headerlink" title="与地图页的解耦合"></a>与地图页的解耦合</h5><p>在切换城市时，对地图页的直接调用改为发<code>NSNotification</code>：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><div class="line"><span class="type">NSNotificationCenter</span>.defaultCenter().postNotificationName(<span class="type">PropertyKeys</span>.kCMCityChangeNotification, object: <span class="literal">nil</span>)</div></pre></td></tr></table></figure>
<p>注意所有的广播名称常量也用前述的<code>struct</code>进行了统一的定义。</p>
<h5 id="转移数据操作"><a href="#转移数据操作" class="headerlink" title="转移数据操作"></a>转移数据操作</h5><p>所有的数据初始化全部移到<code>CMDataSource</code>中进行：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><div class="line">dispatch_async(dispatch_get_global_queue(<span class="type">DISPATCH_QUEUE_PRIORITY_DEFAULT</span>, <span class="number">0</span>), &#123; () -&gt; <span class="type">Void</span> <span class="keyword">in</span></div><div class="line">    <span class="type">CMDataSource</span>.sharedInstance.loadCity(city) <span class="comment">// One line to rule them all!</span></div><div class="line">    dispatch_async(dispatch_get_main_queue(), &#123;[<span class="keyword">unowned</span> <span class="keyword">self</span>] () -&gt; <span class="type">Void</span> <span class="keyword">in</span></div><div class="line">        <span class="type">SVProgressHUD</span>.dismiss()</div><div class="line">        <span class="keyword">self</span>.navigationController?.dismissViewControllerAnimated(<span class="literal">true</span>, completion: <span class="literal">nil</span>)</div><div class="line">    &#125;)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>删除城市数据亦然：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><div class="line"><span class="type">CMDataSource</span>.sharedInstance.removeCity(city)</div></pre></td></tr></table></figure>
<h5 id="使用Storyboard-Xib"><a href="#使用Storyboard-Xib" class="headerlink" title="使用Storyboard/Xib"></a>使用Storyboard/Xib</h5><p>将UI搭建改为Storyboard/Xib这件事早有很多讨论，略去不表。</p>
<h4 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h4><table>
<thead>
<tr>
<th>文件</th>
<th style="text-align:center">地铁通V3.x</th>
<th style="text-align:center">地铁通V4.0</th>
</tr>
</thead>
<tbody>
<tr>
<td>CityListViewController</td>
<td style="text-align:center">1712行</td>
<td style="text-align:center">280行</td>
</tr>
<tr>
<td>CityListCell</td>
<td style="text-align:center">与上面是同一个文件</td>
<td style="text-align:center">123行</td>
</tr>
</tbody>
</table>
<h3 id="线路结果页"><a href="#线路结果页" class="headerlink" title="线路结果页"></a>线路结果页</h3><h4 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h4><ol>
<li><p>如前所述，对于线路数据需要再进行加工才能使用。</p>
<p> 如图，光是确定各种情况下的末班车时间就有下面一大堆方法：<br> <img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7z9j3titcj20se09a0vl.jpg" alt=""></p>
<p> 在<code>tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath</code>里就更加惨不忍睹。</p>
</li>
<li><p>这个页面在搭建UI上的问题更加严重。<br> 由于每次生成的路线有无数种可能的组合，比如该城市的数据库中有没有出租车信息、起点终点是地铁站还是用户输入的地点、进行百度/Google搜索时有搜索中和搜索完成/失败三种状态……导致整个UI是在不停变化的，而未采用AutoLayout中约束条件的弊端在这种情况下体现得淋漓尽致。</p>
<p> 恶心代码欣赏：</p>
 <figure class="highlight objc"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> (taxiFee.floatValue &lt; <span class="number">0.01</span>) &#123;</div><div class="line">    [headerView removeTaxi];</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span>(discountRate &gt; <span class="number">0</span>)&#123;</div><div class="line">    [headerView setDiscountRateUI];</div><div class="line">    <span class="built_in">CGRect</span> headerFrame = headerView.frame;</div><div class="line">    headerFrame.size.height += <span class="built_in">CM_ROUTE_SUM_MARGIN</span>;</div><div class="line">    headerView.frame = headerFrame;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> 曾经设计师在挑UI问题的时候提出某处的空白留的不够，当时的我盘算了下在这种纷杂状况下想要精确控制空白高度的工作量……决定把这个bug放到最后再改，后来其他需求一来就不了了之了……</p>
</li>
<li><p>直接操作现象。<br> 在数据变动要更新UI的时候，经常出现直接去更新相关View控件的代码。初看起来这没什么问题，但还是刚才说的问题，当这涉及到控件大小的改动时，就非常令人头疼了。</p>
</li>
</ol>
<h4 id="改进-1"><a href="#改进-1" class="headerlink" title="改进"></a>改进</h4><h5 id="引入新数据类型"><a href="#引入新数据类型" class="headerlink" title="引入新数据类型"></a>引入新数据类型</h5><p>引入新的<code>Route</code>和<code>RouteNode</code>对象，将所有与表现层无关的数据构建代码一律移入这里。</p>
<p>顺便，还为今后可能的变动做了扩展：<br><figure class="highlight swift"><table><tr><td class="code"><pre><div class="line"><span class="keyword">convenience</span> <span class="keyword">init</span>(start:<span class="type">CMPOI</span>, end:<span class="type">CMPOI</span>, algorithm: <span class="type">CMRouteAlgorithm</span>, type: <span class="type">CMRouteType</span>)</div></pre></td></tr></table></figure></p>
<p>在初始化对象的时候灵活传入所需的算法，可以实现灵活变换不同的算法计算路线。之前出现过针对海外城市采取不同的路线计算方式，当时的实现弄得非常恶心，这样就优雅很多。</p>
<p>现在，即使是返回cell的回调方法里也清晰多了：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath)</span></span> -&gt; <span class="type">UITableViewCell</span> &#123;</div><div class="line">    <span class="keyword">let</span> node = routeArray[indexPath.row]</div><div class="line">        </div><div class="line">    <span class="keyword">if</span> <span class="keyword">let</span> type = node.type, <span class="keyword">let</span> lineId = node.lineId&#123;</div><div class="line">        <span class="keyword">switch</span> type&#123;</div><div class="line">        <span class="keyword">case</span> .<span class="type">TimeAdjusting</span>:</div><div class="line">            <span class="keyword">var</span> cell: <span class="type">CMRouteTimeAdjustingCell</span>? = tableView.dequeueReusableCellWithIdentifier(<span class="type">TimeAdjustingCellId</span>) <span class="keyword">as</span>? <span class="type">CMRouteTimeAdjustingCell</span></div><div class="line">            <span class="keyword">if</span> cell == <span class="literal">nil</span>&#123;</div><div class="line">                cell = <span class="type">CMRouteTimeAdjustingCell</span>(style: <span class="type">UITableViewCellStyle</span>.<span class="type">Default</span>, reuseIdentifier: <span class="type">TimeAdjustingCellId</span>)</div><div class="line">            &#125;</div><div class="line">            ... <span class="comment">// Initialization code</span></div><div class="line">            <span class="keyword">return</span> cell!</div><div class="line">        <span class="keyword">case</span> .<span class="type">Normal</span>:</div><div class="line">            <span class="keyword">var</span> cell: <span class="type">CMRouteNormalStationCell</span>? = tableView.dequeueReusableCellWithIdentifier(<span class="type">NormalStationCellId</span>) <span class="keyword">as</span>? <span class="type">CMRouteNormalStationCell</span></div><div class="line">            ... <span class="comment">// Same as above</span></div><div class="line">            <span class="keyword">return</span> cell!</div><div class="line">        <span class="keyword">case</span> .<span class="type">POI</span>:</div><div class="line">            ...</div><div class="line">            <span class="keyword">return</span> cell!</div><div class="line">        <span class="keyword">case</span> .<span class="type">Transfer</span>, .<span class="type">Start</span>, .<span class="type">Destination</span>:</div><div class="line">            ...</div><div class="line">            <span class="keyword">return</span> cell!</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="type">UITableViewCell</span>()</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h5 id="使用约束条件建立UI"><a href="#使用约束条件建立UI" class="headerlink" title="使用约束条件建立UI"></a>使用约束条件建立UI</h5><p>现在，整个页面，包括cell，都是用Constraints建立起来的（使用了一个第三方库叫<a href="http://snapkit.io/" target="_blank" rel="external">SnapKit</a>）。</p>
<p>而且，cell里面的地铁线路，是用<code>CoreGraphic</code>自己画的。</p>
<p>甚至，线路上的文字是黑色还是白色，都是通过算法自动生成的（参考了<a href="http://stackoverflow.com/questions/3942878/how-to-decide-font-color-in-white-or-black-depending-on-background-color" target="_blank" rel="external">这里</a>的讨论）。</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7zcoe3fqsj20ku111jvd.jpg" width="60%"></p>
<p>这样的灵活度基本上算是达标了:)</p>
<p>PS. 在完成整个项目之后，我试着把新版app在iPad上跑了一下，惊讶地发现，在我没有改动任何地方的情况下，居然所有页面的UI都显示正常！这在引入约束条件生成UI之前简直是不可想象的。</p>
<h5 id="只更新数据源，不操作控件"><a href="#只更新数据源，不操作控件" class="headerlink" title="只更新数据源，不操作控件"></a>只更新数据源，不操作控件</h5><p>事实上，这就是最基本的MVC分层在实际中的应用——当数据变化时，产生变化的组件只负责更新<code>DataModel</code>，然后简单地调用<code>tableView.reloadData()</code>搞定。剩下的问题都由<code>View</code>层自行负责。</p>
<h5 id="成果-1"><a href="#成果-1" class="headerlink" title="成果"></a>成果</h5><table>
<thead>
<tr>
<th>文件</th>
<th style="text-align:center">地铁通3.x</th>
<th style="text-align:center">地铁通4.0</th>
</tr>
</thead>
<tbody>
<tr>
<td>RouteViewController</td>
<td style="text-align:center">3055行</td>
<td style="text-align:center">1158行</td>
</tr>
<tr>
<td>RouteViewCell</td>
<td style="text-align:center">158+67+171+89+220+249+245<br>=1199行&lt;1&gt;</td>
<td style="text-align:center">400行</td>
</tr>
<tr>
<td>Route&lt;2&gt;</td>
<td style="text-align:center">1045行</td>
<td style="text-align:center">N/A</td>
</tr>
<tr>
<td>DataModel&lt;3&gt;</td>
<td style="text-align:center">N/A</td>
<td style="text-align:center">629行</td>
</tr>
<tr>
<td>DijkstraAlgorithm&lt;4&gt;</td>
<td style="text-align:center">N/A</td>
<td style="text-align:center">320行</td>
</tr>
</tbody>
</table>
<p>注：</p>
<ol>
<li>3.x版本中分为NormalCell、TransferCell、HeaderView、SummaryView等许多文件；</li>
<li>3.x版本中的Route文件其实是算法，生成一个不包含meta信息的<code>NSArray</code>；</li>
<li>4.0版本中的DataModel定义了程序所需的所有底层对象，不仅有Route，还有下载的城市以及车站等等；</li>
<li>这是计算图上两点间最短路径的Dijkstra算法的实现，从之前的Route文件中抽了出来。</li>
</ol>
<h3 id="书签-历史页"><a href="#书签-历史页" class="headerlink" title="书签/历史页"></a>书签/历史页</h3><p>这个页面之前也提到过，主要问题是设计太混乱。</p>
<p>修改之后的逻辑相当的简洁，想出错都难：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> indexPath.section == <span class="number">0</span>&#123;<span class="comment">//routes</span></div><div class="line">    <span class="keyword">let</span> route = favRoutes[indexPath.row]</div><div class="line">    <span class="keyword">return</span> getRouteCell(route <span class="keyword">as</span>! <span class="type">NSDictionary</span>)</div><div class="line">&#125;<span class="keyword">else</span>&#123;<span class="comment">//stations</span></div><div class="line">    <span class="keyword">let</span> station = favStations[indexPath.row]</div><div class="line">    <span class="keyword">return</span> getStationCell(station)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>成果是：</p>
<table>
<thead>
<tr>
<th>文件</th>
<th style="text-align:center">地铁通3.x</th>
<th style="text-align:center">地铁通4.0</th>
</tr>
</thead>
<tbody>
<tr>
<td>BookmarkViewController</td>
<td style="text-align:center">784行</td>
<td style="text-align:center">315行</td>
</tr>
<tr>
<td>BookmarkCell</td>
<td style="text-align:center">109+98+105=312行</td>
<td style="text-align:center">90行</td>
</tr>
</tbody>
</table>
<h3 id="车站详情页"><a href="#车站详情页" class="headerlink" title="车站详情页"></a>车站详情页</h3><p>这个页面的代码量与之前基本保持一致，不同的是整体的UI搭建逻辑。</p>
<p>之前的搭法：从上到下依次初始化子控件并添加，保持一个<code>position</code>变量记录当前高度。</p>
<p>新版中的搭法：每个子控件负责处理自己的UI展现，子控件之间用约束条件加以绑定。</p>
<p>由于这个页面的数据都是不确定的，因此只能用代码添加数据元素间的约束条件，这是与前面那些大体UI已定好只待往里填数据的页面不同的地方。</p>
<p>最终的画风大概是这样的：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><div class="line">scrollView.translatesAutoresizingMaskIntoConstraints = <span class="literal">false</span></div><div class="line">scrollView.addSubview(titleBackgroundView)</div><div class="line">scrollView.addSubview(timetableView)</div><div class="line">scrollView.addSubview(facilitiesView)</div><div class="line">scrollView.addSubview(exitView)</div><div class="line"><span class="keyword">self</span>.view.addSubview(scrollView)</div><div class="line"></div><div class="line">scrollView.snp_makeConstraints &#123; (make) -&gt; <span class="type">Void</span> <span class="keyword">in</span></div><div class="line">    make.top.equalTo(<span class="keyword">self</span>.view.snp_top)</div><div class="line">    make.width.equalTo(<span class="keyword">self</span>.view.snp_width)</div><div class="line">    make.bottom.equalTo(floatingBGView.snp_top)</div><div class="line">&#125;</div><div class="line">titleBackgroundView.snp_makeConstraints &#123; (make) -&gt; <span class="type">Void</span> <span class="keyword">in</span></div><div class="line">    make.top.equalTo(scrollView.snp_top).priorityRequired()</div><div class="line">    make.width.equalTo(scrollView.snp_width).priorityRequired()</div><div class="line">&#125;</div><div class="line">timetableView.snp_makeConstraints &#123; (make) -&gt; <span class="type">Void</span> <span class="keyword">in</span></div><div class="line">    make.top.equalTo(titleBackgroundView.snp_bottom).offset(<span class="number">10.0</span>)</div><div class="line">    make.width.equalTo(scrollView.snp_width)</div><div class="line">    make.centerX.equalTo(scrollView.snp_centerX)</div><div class="line">&#125;</div><div class="line">facilitiesView.snp_makeConstraints &#123; (make) -&gt; <span class="type">Void</span> <span class="keyword">in</span></div><div class="line">    make.top.equalTo(timetableView.snp_bottom).offset(<span class="number">20.0</span>)</div><div class="line">    make.width.equalTo(scrollView.snp_width)</div><div class="line">    make.leading.equalTo(scrollView.snp_leading)</div><div class="line">&#125;</div><div class="line">exitView.snp_makeConstraints &#123; (make) -&gt; <span class="type">Void</span> <span class="keyword">in</span></div><div class="line">    make.top.equalTo(facilitiesView.snp_bottom).offset(<span class="number">20.0</span>)</div><div class="line">    make.leading.equalTo(scrollView.snp_leading)</div><div class="line">    make.width.equalTo(scrollView.snp_width)</div><div class="line">    make.bottom.equalTo(scrollView.snp_bottom).offset(-<span class="type">Constants</span>.<span class="type">StationDetailViewVerticalSpacing</span>)</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span> <span class="keyword">let</span> _station = station&#123;</div><div class="line">    titleLabel.text = _station.stationName</div><div class="line">    iconsDisplayView.setImages(_station.getIcons())</div><div class="line">    timetableView.setup(_station.timeTables)</div><div class="line">    facilitiesView.setupUI(_station.facilities)</div><div class="line">    exitView.setupUI(_station.exits)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>UI约束与数据初始化一气呵成，而且清晰明了。（顺便感谢Swift的链式语法）</p>
<h3 id="搜索页"><a href="#搜索页" class="headerlink" title="搜索页"></a>搜索页</h3><p>用到搜索页的地方有两处，一个是首页点击最上方进入的页面，一个是首页点击下方右边按钮进入的页面。两者的不同是：前者有输入起点和终点的工具栏，后者只是单纯搜索定位车站。</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7ztpzxw31j21jk0xcn1y.jpg" alt=""></p>
<h4 id="问题-2"><a href="#问题-2" class="headerlink" title="问题"></a>问题</h4><ol>
<li>之前的版本的两个界面完全独立，等于许多逻辑重复了两遍，违背了DRY(Don’t Repeat Yourself)原则。</li>
<li><p>和线路详情页类似，此处也缺少对数据合理的对象化封装，导致在使用时需要大量的判断逻辑。<br> 比如，会出现下面这样的代码片段：</p>
 <figure class="highlight objc"><table><tr><td class="code"><pre><div class="line"><span class="keyword">if</span> ([workDict objectForKey:<span class="string">@"city"</span>] != <span class="literal">nil</span> &amp;&amp; [[workDict objectForKey:<span class="string">@"city"</span>] isEqualToString:_cityName]) &#123;</div><div class="line">    _isShowingWork = <span class="literal">YES</span>;</div><div class="line">    <span class="keyword">if</span> ([workDict objectForKey:<span class="string">@"add"</span>] == <span class="literal">nil</span>) &#123; <span class="comment">// Station</span></div><div class="line">        ...</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123; <span class="comment">// POI</span></div><div class="line">        [<span class="keyword">self</span> updateHistoryItem:workDict];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span>&#123; <span class="comment">// Have not set</span></div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> 这种直接对原始数据进行操作的做法实在是既繁琐又容易出错。</p>
</li>
<li>对子控件的直接更新，这点和前面的线路结果页类似，但更加麻烦：由于当前编辑状态在随时变化，在决定更新控件时必须由零碎的变量来辅助判断到底要对哪个控件进行操作。<br> 比如在百度定位API返回结果之后，下面的这段响应代码： <figure class="highlight objc"><table><tr><td class="code"><pre><div class="line">    - (<span class="keyword">void</span>)updatePOIFromLocation:(BMKPoiInfo *)info&#123;</div><div class="line">    Station *station = [[<span class="built_in">CMDataSource</span> getInstance] getNearestStation:info.pt.latitude andLo:info.pt.longitude];</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> (isUpdatingStart) &#123;</div><div class="line">        ... <span class="comment">// Do some work</span></div><div class="line">        <span class="keyword">self</span>.currentEditing = <span class="built_in">CMSearchEditingEnd</span>;</div><div class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (isUpdatingEnd)&#123;</div><div class="line">        ... <span class="comment">// Doing work</span></div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> (isUpdatingStart) &#123;</div><div class="line">        isUpdatingStart = <span class="literal">NO</span>;</div><div class="line">        _startIsShowingLocation = <span class="literal">YES</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> (isUpdatingEnd) &#123;</div><div class="line">        isUpdatingEnd = <span class="literal">NO</span>;</div><div class="line">        _endIsShowingLocation = <span class="literal">YES</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>又要凭借状态变量进行判断，又要记得时刻更新它们，还得防止考虑不周更新错了状态，简直是车祸现场。</p>
<h4 id="改进-2"><a href="#改进-2" class="headerlink" title="改进"></a>改进</h4><h5 id="合并两个页面"><a href="#合并两个页面" class="headerlink" title="合并两个页面"></a>合并两个页面</h5><p>我直接把两个页面合并到了一起，由入口参数决定最终显示哪个界面。</p>
<p>但后来意识到，这并不是最好的解决方案。弊端是，原来是毫无耦合造成重复，现在两个页面的耦合又太紧了，虽然在这版的需求中工作得很好，再有调整又会比较棘手。更好的做法是使用<code>组合</code>，把公共的列表提取出来。</p>
<p>这一点在Casa的<a href="http://casatwy.com/tiao-chu-mian-xiang-dui-xiang-si-xiang-yi-ji-cheng.html" target="_blank" rel="external">《跳出面向对象思想(一) 继承》</a>中解释得非常好，我就不再赘述。</p>
<h5 id="新定义数据对象"><a href="#新定义数据对象" class="headerlink" title="新定义数据对象"></a>新定义数据对象</h5><p>在前面提到的<code>DataModel</code>中增加了<code>POI</code>对象，包含<code>Station</code>作为它的一个property。</p>
<p>这代表，现在整个界面中，甚至整个app运行期间，都只有一种数据对象——<code>CMPOI</code>，清爽，干净，不紧绷。</p>
<h5 id="只更新数据源，不操作控件-1"><a href="#只更新数据源，不操作控件-1" class="headerlink" title="只更新数据源，不操作控件"></a>只更新数据源，不操作控件</h5><p>基本同前，不赘述。</p>
<h5 id="成果-2"><a href="#成果-2" class="headerlink" title="成果"></a>成果</h5><table>
<thead>
<tr>
<th>文件</th>
<th style="text-align:center">地铁通3.x</th>
<th style="text-align:center">地铁通4.0</th>
</tr>
</thead>
<tbody>
<tr>
<td>SearchStationViewController</td>
<td style="text-align:center">2019行</td>
<td style="text-align:center">469行</td>
</tr>
<tr>
<td>StationSearchView</td>
<td style="text-align:center">821行</td>
<td style="text-align:center">N/A</td>
</tr>
</tbody>
</table>
<h3 id="DataSource"><a href="#DataSource" class="headerlink" title="DataSource"></a>DataSource</h3><h4 id="明确职责"><a href="#明确职责" class="headerlink" title="明确职责"></a>明确职责</h4><p>这个组件作为整个app的数据中心，在新版的开发中更加明确了它的职责，把原来分散在其他组件中的一些功能划了过来。</p>
<p>比如，之前城市列表读取及解析功能是被划到网络请求组件中的，因为从服务器拿过来的返回数据可以就地解析；但从更高层的逻辑考虑这是不正确的，因为对程序城市列表的需求是更直接的，网络模块只要做好本职的网络交互就行了。</p>
<p>修改之后，网络请求组件读取成功城市列表后，并不直接返回，而是将列表保存到本地缓存起来，再发一个Notification通知到关心读取成功这个事件的其他组件：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">updateCityList</span><span class="params">()</span></span>&#123;</div><div class="line">    ... <span class="comment">// Initialization code for paramaters</span></div><div class="line">        </div><div class="line">    <span class="keyword">let</span> param: [<span class="type">String</span> : <span class="type">String</span>] = [<span class="string">"param"</span>: <span class="type">JSONStringParam</span>]</div><div class="line">        </div><div class="line">    manager.<span class="type">POST</span>(url, parameters: param, success: &#123; (opreation, object) -&gt; <span class="type">Void</span> <span class="keyword">in</span></div><div class="line">        <span class="keyword">let</span> data = object <span class="keyword">as</span>! <span class="type">NSData</span></div><div class="line">        <span class="keyword">if</span> <span class="type">CMDataSource</span>.sharedInstance.loadXMLResponse(data) == <span class="literal">true</span>&#123;</div><div class="line">            <span class="keyword">let</span> documentPath = getDocumentPath(<span class="string">"guides/guides.info"</span>)</div><div class="line">            data.writeToFile(documentPath, atomically: <span class="literal">true</span>)</div><div class="line">                </div><div class="line">            <span class="type">NSNotificationCenter</span>.defaultCenter().postNotificationName(<span class="type">PropertyKeys</span>.kCMCityListUpdateSuccessNotification, object: <span class="literal">nil</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;) &#123; (opreation, error) -&gt; <span class="type">Void</span> <span class="keyword">in</span></div><div class="line">                ... <span class="comment">// Error handler</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>将组件间的耦合降到最低。另外注意这段代码中对返回结果的解析已经移到<code>DataSource</code>了。</p>
<h4 id="减少耦合"><a href="#减少耦合" class="headerlink" title="减少耦合"></a>减少耦合</h4><p>正如上面提到的做法，之前诸多对<code>DataSource</code>直接的操作，在这一版中有许多都改为了通过Notification交互：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><div class="line"><span class="keyword">init</span>()&#123;</div><div class="line">    <span class="keyword">let</span> cityComponents = getCityListFromFile()</div><div class="line">        </div><div class="line">    ... <span class="comment">// Data initialization</span></div><div class="line">        </div><div class="line">    <span class="type">NSNotificationCenter</span>.defaultCenter().addObserver(<span class="keyword">self</span>, #selector(<span class="type">CMDataSource</span>.didSetStart()), name: <span class="type">PropertyKeys</span>.kCMSetStartStationNotification, object: <span class="literal">nil</span>)</div><div class="line">    <span class="type">NSNotificationCenter</span>.defaultCenter().addObserver(<span class="keyword">self</span>, #selector(<span class="type">CMDataSource</span>.didSetEnd()), name: <span class="type">PropertyKeys</span>.kCMSetEndStationNotification, object: <span class="literal">nil</span>)</div><div class="line">    <span class="type">NSNotificationCenter</span>.defaultCenter().addObserver(<span class="keyword">self</span>, #selector(<span class="type">CMDataSource</span>.didRemoveStart()), name: <span class="type">PropertyKeys</span>.kCMRemoveStartNotification, object: <span class="literal">nil</span>)</div><div class="line">    <span class="type">NSNotificationCenter</span>.defaultCenter().addObserver(<span class="keyword">self</span>, #selector(<span class="type">CMDataSource</span>.didRemoveEnd()), name: <span class="type">PropertyKeys</span>.kCMRemoveEndNotification, object: <span class="literal">nil</span>)</div><div class="line">&#125;</div><div class="line">    </div><div class="line"><span class="keyword">deinit</span>&#123;</div><div class="line">    <span class="type">NSNotificationCenter</span>.defaultCenter().removeObserver(<span class="keyword">self</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>对于与上面谈到的改进点比较接近的页面，限于篇幅不再赘述，只在此处一并提及：</p>
<ul>
<li><p><code>地图View</code>，去掉了与上层的所有耦合，交互改为发<code>NSNotification</code>；同时将地图上要显示的控件统一到一个<code>protocol</code>之下，这样就可以利用Swift新提供的<code>泛型</code>特性，写出很强一致性的代码：</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">func updateCoor&lt;T: TiledScrollViewOverlay where T: UIView&gt;(_view: T, zoom: Bool)&#123;</div><div class="line">    ... // Update code</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p><code>网络请求模块</code>，上面已有提及，在移除不属于自身逻辑的同时，重新整理了解析数据的时机（原来的版本中居然重复着极为相似的三段代码！又一个车祸现场）；</p>
</li>
<li><p><code>分享模块</code>，之前的封装使用非常繁琐，每次还要自行加到UIWindow上去。于是又重新写了一个，弹出分享控件只需下面几步：</p>
  <figure class="highlight swift"><table><tr><td class="code"><pre><div class="line"><span class="keyword">let</span> shareKit: <span class="type">CMShareKit</span> = <span class="type">CMShareKit</span>.getInstance()</div><div class="line">shareKit.setup(<span class="string">"分享文字"</span>, </div><div class="line">    emailBody: <span class="string">"邮件文字"</span>, </div><div class="line">    smsBody: shareContent, </div><div class="line">    weixinTitle: appName, </div><div class="line">    weixinBody: shareContent, </div><div class="line">    weixinPengyouBody: shareContent, </div><div class="line">    weixinURL: <span class="type">CMConfig</span>.<span class="type">AppDownloadURLTrim</span>.absoluteString, </div><div class="line">    qqTitle: appName, </div><div class="line">    qqBody: shareContent, </div><div class="line">    qqURL: <span class="type">CMConfig</span>.<span class="type">AppDownloadURLTrim</span>.absoluteString, </div><div class="line">    weiboBody: shareContent, </div><div class="line">    image: <span class="keyword">self</span>.getCurrentViewShot())</div><div class="line">shareKit.show(<span class="keyword">self</span>)</div></pre></td></tr></table></figure>
</li>
<li><p><code>添加/删除书签和历史模块</code>，干掉，完全移入<code>DataSource</code>。并且前一版本是把数据序列化后保存为文件，这导致了相当大的性能问题，在暴力测试疯狂增删时甚至可能导致崩溃。新版中改为只保存必要的信息（比如起点和终点），等需要时再把路线实时计算出来即可。</p>
</li>
</ul>
<h2 id="一些私心"><a href="#一些私心" class="headerlink" title="一些私心"></a>一些私心</h2><p>上面基本把大块的重构页面讲完了，下面说几个旧版本中没有的页面，也算是我自己的私心。</p>
<p>考虑到这是我最后一次负责这个项目，也是第一次有如此大的决定权，我不禁在重构之余腾出手来加了一些自己想加的页面。</p>
<h3 id="致谢页面"><a href="#致谢页面" class="headerlink" title="致谢页面"></a>致谢页面</h3><p>作为一个有点情怀的程序员，我一直对于程序中没有对开源库的致谢这一点耿耿于怀。以前对项目没有话语权，也腾不出手做，这次怎么也得补上：</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79gw1f80hpnui5cj20ku112dls.jpg" width="60%"></p>
<p>注：由于当时在发布时CocoaPods和Swift还有些兼容性问题，所以没有用CocoaPods自动生成的，而是自己写了个HTML网页。</p>
<h3 id="关于页"><a href="#关于页" class="headerlink" title="关于页"></a>关于页</h3><p>关于页也是夙愿之一。事实上更早的版本中有这个页面，但由于一些不可考的原因给砍掉了。</p>
<p>我仿照之前的关于页用Photoshop作了个图，并且顺便把以前版本的关于页也加了进来，往右边滑动即可看到。虽然这么个深藏在n级页面之下的页面估计没多少人点进来，但总算还是为以前那些已经离职的曾经为地铁通出过力的同事在这个角落立了个碑。</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79gw1f80hpnqbusj20ku112juz.jpg" width="60%"></p>
<h3 id="历史版本"><a href="#历史版本" class="headerlink" title="历史版本"></a>历史版本</h3><p>这个点子我是在做好线路详情页的时候想到的：既然我做了一套可以在cell上画线路的代码，那么我可以把它复用到别的地方啊——比如整个地铁通的发展史！</p>
<p>于是就有了下面的页面：</p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79gw1f80hpoji3nj20ku112ah7.jpg" width="60%"></p>
<p>看起来很简单，其实做起来还是有点麻烦的。我在元旦跨年的时候去了趟日本休年假，途中带上了笔记本电脑，那真是一有时间就在做这个页面啊……</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7y52ic05dj21hc1z4x0s.jpg" alt=""></p>
<h3 id="末班车提示"><a href="#末班车提示" class="headerlink" title="末班车提示"></a>末班车提示</h3><p>这也是我私心特别想做的功能，也借着这次机会做了出来：</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f80j8hcb9tj20ku1120vj.jpg" width="60%"></p>
<p>上个动图演示：</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79gw1f80yq2elx9g20c80lrnpd.gif" alt=""></p>
<p>对于地铁线路而言，首班车很简单——只需从数据库中读取起点站的首班车信息即可。可末班车却复杂得多，它既不是简单的起点站末班车时间，也不是最后一个换乘站的末班车时间，而是有点类似于木桶原理，取决于短板——也就是说，取决于整条换乘路径中收班最早的换乘站。</p>
<p>在之前的版本中，我们实现了这个算法，但不时有用户表示疑惑：这个末班车是怎么算出来的？为什么这么诡异？</p>
<p>上面的这个功能就是对这个问题的优雅解答，一切都是自解释的：在用户操作的时候就能注意到变化，一句多余的说明都不用。</p>
<p>只要赶上标红字的站点的末班车，整条末班车线路就能成立。</p>
<p>事实上，之前的产品经理曾经做出过一版设计：</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f810g7ergvj20hs0vkdil.jpg" width="60%"></p>
<p>我不喜欢这个设计，因为它割裂了上下文。弹窗是个十分影响交互体验的设计模式，除非你一定要显式地引起用户注意，否则引入弹窗就是错误的。电脑出栈入栈尚且有开销，何况人脑？（另外注意这个页面里的“首班车”和“末班车”按钮——没有比这俩按钮更突兀的设计了）</p>
<p>后来这个功能在反对声中索性被砍掉了，但我还是觉得这个需求是有必要的，只是需要找到更合理的设计。</p>
<p>在找到现在这个解决方案之前也纠结了很久，最终在某个凌晨能很快实现还是要归功于这次合理的架构设计，很难想象在之前那一坨3000行的代码里加个这种功能要抓狂到什么地步。</p>
<h3 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h3><p>是的，作为一个有着不止一点情怀的程序员……我还埋了个彩蛋，估计没人发现过，即使如此我也不想说xD</p>
<p>PS. 那些大公司的软件里彩蛋到底是怎么埋的？一Code Review不是就直接被辞退了吗？</p>
<h2 id="跋"><a href="#跋" class="headerlink" title="跋"></a>跋</h2><p>基本写完了程序主体，然后我又开始做起了市场。</p>
<p>当时赶工时每天唯一的娱乐是伴饭看一集《广告狂人》，所以到这个想广告词的环节觉得特别带感，感觉Don Draper（《广告狂人》男主角）上身。</p>
<p>于是就有了我用Photoshop做的下面这一批AppStore宣传图：</p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79jw1f811hg8q9kj21kw0k7dnk.jpg" alt=""></p>
<p>扶上驴，送一程。至此，对于这个项目，我的任务差不多完成了。</p>
<p>用户反馈差不多是这样：</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f811mnjoolj20ku112wjk.jpg" width="60%"></p>
<p>就用项目刚开始时我在豆瓣发的一条广播来结束本文吧：</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f811ovmy91j20ku112777.jpg" width="60%"></p>
<p>希望能给你带来一些启发，欢迎提出意见和批评。</p>
<p>感谢观赏。</p>
<hr>
<p>广告：</p>
<p>我现在正在找工作，希望加入一个比较大的团队继续学习。</p>
<p>如果您觉得我比较合适，可以联系：zshowing[at]gmail.com</p>
]]></content>
    
    <summary type="html">
    
      在从TouchChina离职前，我决定完成一件一直想做却一直受制于进度与需求的事：将已经开发了三四年的地铁通进行一次彻底的重构。&lt;br&gt;本文从重构动机、重构思路以及重构后的对比几个角度，剖析了在程序开发以及架构设计中可能有所提高的地方。
    
    </summary>
    
      <category term="Code" scheme="http://zshowing.github.io/categories/Code/"/>
    
    
      <category term="iOS" scheme="http://zshowing.github.io/tags/iOS/"/>
    
      <category term="产品设计" scheme="http://zshowing.github.io/tags/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="架构" scheme="http://zshowing.github.io/tags/%E6%9E%B6%E6%9E%84/"/>
    
      <category term="Swift" scheme="http://zshowing.github.io/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>Basic Loveology</title>
    <link href="http://zshowing.github.io/2016/08/11/Basic-Loveology/"/>
    <id>http://zshowing.github.io/2016/08/11/Basic-Loveology/</id>
    <published>2016-08-11T03:26:21.000Z</published>
    <updated>2016-09-19T01:56:55.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>*题目是致敬美剧&lt;Community>每集的标题命名风格。</em></p>
<p>我觉得，一段经得起推敲的感情，大致有两个分类。</p>
<p>一种是邂逅型，一种是养成型。</p>
<p>前者代表一类爱情电影：一次惊天地泣鬼神的邂逅，两个人发现他俩各种搭，究级搭，搭成狗，接下来就是各种无中生有的变故最后俩人没羞没臊地生活在一起。</p>
<p>后者代表另一类爱情电影：俩人最开始巨不搭，究级拧巴，拧巴成狗，接下来就是各种无中生有的变故最后俩人发现/变得还真挺搭的。</p>
<p>所有不属于这两类的都属于经不起推敲的感情，代表了剩下的爱情电影：莫名其妙的单恋啊，奇形怪状的多角恋啊，等等。</p>
<p>我在不同场合表达过许多次对相亲的反感和抵触，主要原因就是，我认为在现实中，邂逅型恋情的概率低到可以忽略。换句话说，参加1000次相亲大概才能有3次能碰到靠谱的人（3σ原则）。考虑到这世界上每天真实发生的总相亲次数和其中能产生的靠谱结果，我甚至觉得0.3%都是个乐观的估计。</p>
<p>相亲的结果几乎只有四种：一边试探着跟你交往一边暗暗觉得你是sb，或者一边试探着跟你交往然后突然发现你是sb，直接觉得你是sb，你觉得对方是sb。</p>
<p>所以，对于非男神女神级别的普通人而言，最现实，也是唯一可能走通感情线的途径，就是养成型路线。（注意，不是童养媳和光源氏计划。）</p>
<p>小学的青梅竹马，高中的前后桌，大学的同社团同学，公司里的程序员和产品经理。</p>
<p>只有他们有可能知道其实我一直是sb，然后还依然爱我啊。</p>
<p><br></p>
<p>但是说起来，比起普遍鄙视网恋的论调，我倒一直觉得在网上找对象比在现实中碰概率更靠谱。</p>
<p>不同于现实生活或者相亲时拘谨的找话题，网上生活是相对没限制的、兴趣导向型的。有人说网上代表着虚假和伪装，我反而认为网上才有一些当面看不到的真实。</p>
<p>尤其是豆瓣、微博这种积累着大量这个人历史偏好的天然数据库，比起相亲时互相刨根问底，效率高到不知哪里去了。</p>
<p><br></p>
<p>综上，如果不是运气爆棚碰到个青梅竹马或完美配对，在理论上最优化的找对象途径是：在网上广播出自己的信息和特性，由臭味相投的另一个个体接收，并发回反馈。</p>
<p>一直很奇怪豆瓣官方为什么不做这个，简直是浪费了大好的用户数据和刚性需求。</p>
<p><br></p>
<p>开始认真考虑在恰当的时候在网上也发个征友的帖子。虽然很不情愿高调，但没有一家合适的平台能让相关信息低调地精准抵达受众啊。</p>
<hr>
<p>参考资料：</p>
<p><a href="https://www.douban.com/doulist/37853447/" target="_blank" rel="external">豆列：随手转发征婚交友帖</a><br><a href="https://www.douban.com/note/97560239/" target="_blank" rel="external">《给未来的你》，2010/4/23</a></p>
]]></content>
    
    <summary type="html">
    
      有关爱情的基本定理：一段经得起推敲的感情，大致有两个分类。
    
    </summary>
    
      <category term="Life" scheme="http://zshowing.github.io/categories/Life/"/>
    
    
      <category term="Love" scheme="http://zshowing.github.io/tags/Love/"/>
    
  </entry>
  
  <entry>
    <title>Advanced Self-Examination and Status Analyze</title>
    <link href="http://zshowing.github.io/2016/08/06/Advanced-Self-Examination-and-Status-Analyze/"/>
    <id>http://zshowing.github.io/2016/08/06/Advanced-Self-Examination-and-Status-Analyze/</id>
    <published>2016-08-05T17:01:53.000Z</published>
    <updated>2016-09-22T05:59:43.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>*题目是致敬美剧&lt;Community&gt;每集的标题命名风格。</em></p>
<p>回顾了一下之前的文字，上一次真正认真打些东西还是元旦跨年的时候，再早一些就要追溯到去年这个时候了。比起动不动就一个月加起来打几万字日志的大学时代，现在的我还真是惊人的沉默。</p>
<p>当年我说，我之所以喜欢码字，是因为谋篇布局这件事能让我快乐。</p>
<blockquote>
<p>“不管是写什么，也不管有没有人看，只要我可以遣词造句，只要我能够布局谋篇，我就能体会到那种不能言喻的快乐。至于得到了谁谁的认可，或是受到了某某的赞赏，那倒都是些锦上添花的东西了。”</p>
<p>“归根结底，写作，是因为快乐。仅此而已。”</p>
<p>——《因为快乐》，2009.4.30</p>
</blockquote>
<p>现在想起来，写作能让当时的我感到快乐，有几个原因：</p>
<ol>
<li>那是当时我发泄情绪的主要渠道；</li>
<li>不同于做数学作业和背电路公式，写作是一项创造性工作；</li>
<li>除了创造性以外，写作实质上是一件高度理性化的事情，这恰好有助于我整理混乱的大脑思绪；</li>
<li>最后一点是当时我没意识到，但是现在看起来显而易见的事情——写作恰好是当时的我最擅长的事情。</li>
</ol>
<p>而现在，处在2016年的这个十字路口，我再次拾起写作这个工具，主要是为了上述的第三个功能。</p>
<h2 id="The-Past"><a href="#The-Past" class="headerlink" title="The Past"></a>The Past</h2><p>实际上，上面说的第四点是一个贯穿我迄今为止人生的过程，我一直在寻找自己擅长的事情。有的时候这等同于另一个概念，就是上面所说，能让我感到快乐的事情。</p>
<p>由于这世上的选项实在太多，最开始我用的是排除法。</p>
<p>上大学之前我知道的是，我不喜欢做简单重复而没有创造性的工作，这是在我学车的时候看教练的工作状态领悟的。</p>
<p>后来进了大学，我意识到了另一件事：我不喜欢做看不到成果的理论工作。换句话说，我发现我是个实用主义者，只有那些能实实在在看得到的东西才能引起我的兴趣。（顺便，这大概是我在被数学分析的证明题折磨恶心的时候领悟到的。）</p>
<p>大四时因为一个偶然的契机，我开始为学校的BBS设计进站页面——说是设计，其实只是简单的摆弄Photoshop，做个700px × 400px的图片。但我立刻发现，从这件事情上，不管是过程还是结果，我都获得了不小的成就感。</p>
<p>毕业之后进入IT业界，我在完全没接触过手机开发的情况下在家自学了一阵，最终幸运地找到了个开发app的工作，因为比起传统的PC端编程（尤其是搞后端啊数据库神马的），手机app开发是典型的“能实实在在看得到的东西”。</p>
<p>在这期间，我又仔细界定了一下自己的兴趣所在：</p>
<ol>
<li>我喜欢做创造性的工作；</li>
<li>在1的基础上，我喜欢做能看得到“实体”的工作（在这个语境中，能看得到界面的就算实体）；</li>
<li>在1和2的基础上，我喜欢做能体现美感的工作；</li>
<li>最理想的（也就是说不现实的）状况是，我能胜任从头到尾（立项、画原型、写产品文档、做视觉设计、写代码、调交互、迭代）自己打磨一件，属于自己的产品。（顺便，今年前几个月我考虑过怎么才能做freelance，最终觉得确实不太现实）</li>
</ol>
<p>但实际情况是，即使做的是app开发，在很多时候还是广义的体力活的范畴。我能做的大概只有——在文档没说清楚的地方发挥自己的创意（换个大公司估计就不可能有这种事了）以及经常和产品经理探讨产品问题（以至于最后产品经理离职前还送了我一本<a href="https://book.douban.com/subject/25915629/" target="_blank" rel="external">讲用户体验设计的书</a>。</p>
<h2 id="The-Present"><a href="#The-Present" class="headerlink" title="The Present"></a>The Present</h2><p>于是，就有了去学交互设计的想法。</p>
<p>留学这事大学时就考虑过，但是以当时的情况实在是不现实：数学分析和电路这种我毫无兴趣的理论课早已让我噤若寒蝉，我觉得即使出去也是大学几年惨痛经历的重演而已。况且要申奖学金必须申PhD，而如前所述，我对研究理论问题没有丝毫兴趣；如果只申Master的话——事实上，我爸说要卖一套房——把我吓坏了，本来就觉得自己会应付不来理论课，再加上这种败家的压力（简直就是必须要成功），简直想想就觉得透不过气。</p>
<p>现在的心态就要好很多，首先比起计算机科学，人机交互是个和蔼可亲得多的项目；至于关键的学费问题，现在作为一个有良好信用记录的人，我可以去银行申请贷款，甚至可以把前两年摇号中签后不得不买的车卖掉换个七手夏利扔小区里（反正即使我在北京也经常一个月不开）。再租个七平米的房子什么的省省钱（当年在上海住过半年多），应该差不多够用。所以，我对出国所有的恐惧中，就只剩语言和交流问题。这也是这次出国的想法一直拖到现在才真正论证可行性并付诸实践的原因之一。（另外的顾虑包括，GPA实在是比较渣，但翻阅知乎上这两年前辈的帖子有的说工作和项目经验可以弥补——感谢同为实用主义者的部分老美）</p>
<p>我只能这么想：比起在国内血汗工厂加班出卖代码劳动力来说，跟人用英语交流，甚至，做presentation也就显得不那么可怕了。</p>
<p>说完了“道”上的内容，说些“术”上的细节。</p>
<p>现实是这样的：</p>
<p>目前单词量还是非常贫瘠，而GRE的填空毫无逻辑难度，简直完全在考词汇量；</p>
<p>阅读速度非常差劲，建议15-17分钟完成的阅读，计时完成时间普遍在30分钟以上；</p>
<p>前几天试着看了一下&lt;Lord of the Flies&gt;，只读了4页，在Evernote里作了整整一页的笔记，花了一个小时；</p>
<p>基本上好的学校都要求托福口语和写作在25分以上，有些要求26分（年前考的时候口语20分，现在应该不会有什么变化——这也是在英国时airbnb的房东说我口语好，我十分惊讶的原因）；</p>
<p>我的背景（作品集相关）还需要强化，目前体现专业相关的内容太少；</p>
<p>学费还是需要再赚一赚……</p>
<h2 id="The-Future"><a href="#The-Future" class="headerlink" title="The Future"></a>The Future</h2><p>考虑到上面这些因素，赶今年申请季估计比较悬。</p>
<p>虽然HCI有着越来越热的趋势，但达不到硬性规定，申请也是没有意义的。</p>
<p>到现在居然卡在语言问题，实在是……但没办法，悟已往之不谏，知来者之可追。</p>
<p>所以还是继续再找个工作，然后在这多出来的一年里提升相关的水平。</p>
<p>——就算没申请成功（很有可能），至少英语水平还提高了呢，也算一举突破了一个长久以来的瓶颈。</p>
<p>反正我还能继续，骄傲（傲娇）地，写代码。</p>
]]></content>
    
    <summary type="html">
    
      在2016年这个十字路口，回顾了一下历史的进程，激励了一下自我的奋斗。
    
    </summary>
    
      <category term="Life" scheme="http://zshowing.github.io/categories/Life/"/>
    
    
      <category term="Career" scheme="http://zshowing.github.io/tags/Career/"/>
    
      <category term="Life" scheme="http://zshowing.github.io/tags/Life/"/>
    
      <category term="自我剖析" scheme="http://zshowing.github.io/tags/%E8%87%AA%E6%88%91%E5%89%96%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Simptrue企业VI视觉设计策划案</title>
    <link href="http://zshowing.github.io/2016/02/24/visual-design-for-Simptrue/"/>
    <id>http://zshowing.github.io/2016/02/24/visual-design-for-Simptrue/</id>
    <published>2016-02-24T02:49:49.000Z</published>
    <updated>2016-09-22T09:27:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>Simptrue是一家致力于为企业提供数据分析商业服务的公司，理念是：Simple to use, true to your business.</p>
<p>由此可以提炼出主导整个设计的一些关键词：<strong>专业、信任、简洁</strong>。</p>
<p>在下面的设计中，我们将以这几个词为标准来考虑具体的做法。</p>
<h2 id="Logo"><a href="#Logo" class="headerlink" title="Logo"></a>Logo</h2><h3 id="形状"><a href="#形状" class="headerlink" title="形状"></a>形状</h3><p>Logo在设计过程中主要考虑如何与图表的意象结合起来，最初尝试的是块状阵列图，感觉与简洁的原则相悖。最终决定以字母“S”为原型，抽象成柱状图。</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f82a9oqt7rj21kw11xatq.jpg" alt=""></p>
<h3 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h3><p>Logo，以及整体视觉形象设计的主色调定为蓝色，因为从颜色心理学的角度，蓝色是在第一时间最能给人信任、可靠感觉的颜色。</p>
<p>具体色值暂定为以下值，还有调整的余地。</p>
<p>目前定下一深一浅两种色调，分别用于各种适合的场合。</p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79jw1f82gu9a14lj20ye04iq3g.jpg" alt=""></p>
<h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p>无衬线字体是现代字体发展的成果，非常适合公司简洁、现代、专业的企业定位，在浏览了字体集之后，最终选取了<code>Handel Gothic BT</code>这款字体。</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f82h2wpde8j21520qo45u.jpg" alt=""></p>
<p>这款字体除了满足无衬线的要求外，其设计思路非常严谨，在转角处几乎都是统一的几何弧度，整体非常符合公司的形象。</p>
<h3 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h3><p>在确定了以上几个问题之后，接下来又进行了一些迭代。</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f82h7rtok2j21kw37sqgg.jpg" width="60%"></p>
<p>最上面算是原型，下面主要是对柱状图的粗细进行了微调，并对右侧公司名进行了一下变化的尝试，最后互换了深浅颜色。</p>
<h3 id="定型"><a href="#定型" class="headerlink" title="定型"></a>定型</h3><p>下面分别是设计图、完成图和衍生图。</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f82hbspp6xj21kw0g4n7o.jpg" alt=""></p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f82hdfwyicj216s0uun17.jpg" alt=""></p>
<h2 id="衍生设计"><a href="#衍生设计" class="headerlink" title="衍生设计"></a>衍生设计</h2><p>以下设计作为对整体视觉设计的一些探索，供参考使用。</p>
<h3 id="名片"><a href="#名片" class="headerlink" title="名片"></a>名片</h3><p>名片的文字尝试了两种标志颜色的混合，实际使用中要先打印下，检查浅蓝的部分是否不易阅读。</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f82hi5z3n8j21kw0h0n06.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f82hi6l0j7j217w0r8wh3.jpg" alt=""><br>正面</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f82hi6h5vdj217e0qkabb.jpg" alt=""><br>反面</p>
<h3 id="信纸"><a href="#信纸" class="headerlink" title="信纸"></a>信纸</h3><p>信纸的右下角尝试了对Logo元素的重复强化使用。</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f82hk68hj0j21721k2q57.jpg" width="80%"></p>
<h3 id="报告书封面"><a href="#报告书封面" class="headerlink" title="报告书封面"></a>报告书封面</h3><p>这里尝试了两种配色的使用，并重复使用了柱状图这个意象。</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f82hm6avfpj20gj0nemza.jpg" width="60%"></p>
<p>这个版本中使用了构成Logo的三角形，和两个配色。</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f82hmpg545j20gj0ne3zt.jpg" width="60%"></p>
]]></content>
    
    <summary type="html">
    
      Simptrue是一个朋友创业开办的公司，我参与了该公司Logo设计的竞标，这是设计过程。
    
    </summary>
    
      <category term="Design" scheme="http://zshowing.github.io/categories/Design/"/>
    
    
      <category term="Design" scheme="http://zshowing.github.io/tags/Design/"/>
    
      <category term="Logo" scheme="http://zshowing.github.io/tags/Logo/"/>
    
      <category term="视觉设计" scheme="http://zshowing.github.io/tags/%E8%A7%86%E8%A7%89%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>地铁通4.0发布</title>
    <link href="http://zshowing.github.io/2016/02/09/ChinaMetro-V-4-0-Released/"/>
    <id>http://zshowing.github.io/2016/02/09/ChinaMetro-V-4-0-Released/</id>
    <published>2016-02-09T12:02:28.000Z</published>
    <updated>2016-09-18T15:10:21.000Z</updated>
    
    <content type="html"><![CDATA[<p>过去三个多月一直在做的项目AppStore审核通过了，我的感觉其实是做了一个自选题目的毕业设计。</p>
<p>从八月份开始萌生想法一步步执行到最后上线，除从头搭程序框架外还做了策划、设计、产品、文案的活儿（当然好多都是站在先贤的肩膀儿上），算是过了各种瘾。</p>
<p>出于私心还加上了致敬之前参与项目的同事的页面，虽然在关于页面的深处藏着，总算得上是力所能及的一点心意。</p>
<p>这次重写给了自己一次改正错误的机会，因为一个一线程序员在意识到他在架构上犯错的时候通常是没机会弥补的，只能默默记下来，而这是因为重写（注意不是重构）这件事通常对公司不构成合理的产值贡献。事实也确实如此，跑完完整测试流程的情况下，架构是否合理与用户关系不大，它影响到的是维护性和扩展性，这两点在这次项目的最后阶段有所体验，由于架构分得合理，紧耦合也按经验拆得差不多，最后关头才加的几个功能所需时间之少令我自己都瞠目结舌。</p>
<p>除此之外，这也可以算得上是一次社会公益活动，毕竟目前这个App的日活跃用户有大概几万，总用户数几百万，给他们留下一个漏洞百出的陈年老App，我是不太愿意的；尤其再说是我曾经写过这个App，我是不太甘心的。</p>
<p>当然，再剩下的就是上面提到的过瘾的机会，琢磨功能，打磨流程，憋宣传文案（带感的是我在同一时间里在补《广告狂人》，代入感非常强），用PS和AI作素材图和效果图等等，都我一个人来。其实由于我一直在过度乐观地估计工作量（最开始我甚至以为这事自己在私底下就能偷偷摸摸干完了），导致出去玩的时候我也带上了电脑赶工，但这也是一种过瘾啊——这不是在体验自由职业的生活么：</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7y52ic05dj21hc1z4x0s.jpg" alt=""></p>
<p>最后，利用这次机会还从零掌握了一门语言Swift。</p>
<p>总之，几个月只看了两部电影，推了好多饭局，买了无数外卖，结果算是没白忙，看起来AppStore的反馈还算不错。一些细节因为实在没时间，有些疏漏，就要交给李叔来修了。</p>
<p>时间表复盘：</p>
<ul>
<li>2015.8 - 原始想法</li>
<li>2015.9 - 其他项目</li>
<li>2015.10.6 - Git Initial Commit，导入各种库，搜索Swift编码最佳实践</li>
<li>2015.10.19 - 正式开始编码工作</li>
<li>2015.11.23 - 将项目写进公司工作周报，李林超加入</li>
<li>2015.12.1 -<br>  <img src="http://ww3.sinaimg.cn/large/5613ec79jw1f7y54u35oxj21kw0umgzk.jpg" alt=""></li>
<li>2015.12.11 - “12月21号提交”</li>
<li>2015.12.20 - 决定延期提交</li>
<li>2016.1.28 - 做完所有预期功能</li>
<li>2016.2.1 - 提交</li>
<li>2016.2.3 - The last day</li>
</ul>
]]></content>
    
    <summary type="html">
    
      在地铁通4.0终于审核通过的时刻，回顾了过去几个月的经历。
    
    </summary>
    
      <category term="Code" scheme="http://zshowing.github.io/categories/Code/"/>
    
    
      <category term="Code" scheme="http://zshowing.github.io/tags/Code/"/>
    
  </entry>
  
  <entry>
    <title>Bye, 2015</title>
    <link href="http://zshowing.github.io/2016/01/01/Summary-of-2015/"/>
    <id>http://zshowing.github.io/2016/01/01/Summary-of-2015/</id>
    <published>2015-12-31T16:21:30.000Z</published>
    <updated>2016-09-21T14:58:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>翻了半天微博和豆瓣的记录，终于想起来今年年初都在干什么了……</p>
<p><br></p>
<p>2015年大致分为3个阶段：</p>
<p>第一阶段是闲云野鹤般的第一季度，比如一月的观影量是奇迹般的29部，比如三月和四月几乎把公司图书室感兴趣的书都看完了，比如三月一个月没事儿闲的跑了98.7公里……</p>
<p>第二阶段是参与高中返校的筹备工作，真正投入这件事大概就是四月底五月初，当我意识到没人能接手做这件事的时候，只能硬着头皮上。没想到最后的结果算是相当不错，是一次偏离现有生活主线的歪打正着的难得收获，也结实了不少可靠的朋友。它直接增加了我心中往其他方向尝试的筹码。</p>
<p>之后的生活又闲散了一段时间，比如就在这期间我看了今年最爱的一系列电影：《小森林》，比如我把公司图书室剩下的感兴趣的书也读完了，比如我还去故宫看了个清明上河图……</p>
<p>第三阶段是App重写，日记显示是10月19日正式开始正经的coding，不过之前已经筹划一阵子了，是一个完全自己立项筹划推进的项目。因为突发的牙疼导致中间损失了好多天，到12月22日之前，除了看牙医之外的时间基本上全贡献给了这个项目，绝对废寝忘食。不过即使这样进度还是堪忧lol</p>
<p>“人呐，就都不知道，命运不可以预料”。在年初的时候，我绝对想象不到这一年会经历些什么，年末时会做出怎样的选择，现在会在哪里打下这些话。</p>
<p>觉得自己这一年做得还不错，两段忙的时间真的努力到每天没有休息的时候，现学现用Adobe Illustrator和SketchUp也很酸爽，相比主要在恢复元气的2014，是真正有点收获的一年。</p>
<p><br></p>
<p>2016年当然首先要把手头的项目发出去23333</p>
<p>然后要做什么呢？</p>
<p>I don’t know.</p>
<p>That’s the best part, right?</p>
<p>2016.1.1凌晨，<br>于日本东京·六本木 星巴克</p>
]]></content>
    
    <summary type="html">
    
      一份来自日本东京的2015年度年终总结。
    
    </summary>
    
      <category term="年终总结" scheme="http://zshowing.github.io/categories/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="总结" scheme="http://zshowing.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Project RDFZ: The Documentary, Part II</title>
    <link href="http://zshowing.github.io/2015/09/27/Project-RDFZ-the-Documentary-Part-II/"/>
    <id>http://zshowing.github.io/2015/09/27/Project-RDFZ-the-Documentary-Part-II/</id>
    <published>2015-09-27T10:50:08.000Z</published>
    <updated>2016-09-21T15:00:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>大家好，这里是人大附中2005届学生毕业十周年返校活动的现场，我是记者小张儿。</p>
<p>接下来请您跟随我的镜头一起，深入到活动的各个环节。</p>
<p>首先映入我们眼帘的，是工人正在组装巨大的背板。</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7wqcs4v4oj21kw11xwxe.jpg" alt=""></p>
<p>在另一边，组委会的志愿者们正在用流水线的形式分装要送给到场同学的礼物。</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7wqei6flkj21kw2dcb0t.jpg" width="60%"></p>
<p>成果是这样的：</p>
<p><img src="https://mir-s3-cdn-cf.behance.net/project_modules/1400/d948cc29889607.5610054c31147.png" alt=""></p>
<p>大波同学还没到，工作人员还在待机：<br><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f7wr2iq5xrj21kw11xk72.jpg" alt=""></p>
<p>不知不觉中背板已经搭好了！大概是这样的画风：</p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79jw1f7wql9tiy0j21kw11xnbx.jpg" alt=""></p>
<p>是大家的签到板和合影的背景板。</p>
<p>在大家忙着合影签名的时候，让我们四处走走，这是沿途的指示牌：</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f7wqmeik77j21kw11xtoh.jpg" alt=""></p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f7wqnouxa7j21kw11xne8.jpg" alt=""></p>
<p>重头戏来了，在等候正式聚会开始前，组委会准备了收集印章活动，最先收集齐7个印章的同学可以<del>召唤神龙</del>获得神秘奖品。</p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79jw1f7wqqn5znbj21kw11x164.jpg" alt=""></p>
<p>那么印章的效果到底是什么样呢？</p>
<p>锵锵锵！！！</p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79jw1f7wqso6u29j21kw1kwttd.jpg" alt=""></p>
<p>还有还有，神秘礼物是什么呢？</p>
<p>你还别说，笔者也不知道！！</p>
<p><br></p>
<p>活动正式开始：</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7wqxe0om1j21kw11xwsf.jpg" alt=""></p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7wqwqa6v5j21kw11xe2l.jpg" alt=""></p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7wqz2hgb9j21kw11x7ki.jpg" alt=""></p>
<p>活动圆满结束！部分筹备组人员合影：</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7wr8wc5foj20zk0non1v.jpg" alt=""></p>
<p>到家，终于见到了冰箱贴的真身：</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f7wqv9muvaj21kw11xwsk.jpg" alt=""></p>
<p>就是这样，感谢观赏！</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f7wr7d4gkmj21kw2dctme.jpg" alt=""></p>
<p>文字/摄影：Jon Showing</p>
]]></content>
    
    <summary type="html">
    
      在高中毕业十周年返校聚会即将到来的时候，我临危受命被抓来设计与之相关的一系列物料。&lt;br&gt;这是对整个设计过程进行记录的系列文章之二，描绘了活动现场的设计实物效果。
    
    </summary>
    
      <category term="Design" scheme="http://zshowing.github.io/categories/Design/"/>
    
    
      <category term="Design" scheme="http://zshowing.github.io/tags/Design/"/>
    
      <category term="RDFZ" scheme="http://zshowing.github.io/tags/RDFZ/"/>
    
  </entry>
  
  <entry>
    <title>Project RDFZ: The Documentary, Part I</title>
    <link href="http://zshowing.github.io/2015/09/26/Project-RDFZ-The-Documentary-Part-I/"/>
    <id>http://zshowing.github.io/2015/09/26/Project-RDFZ-The-Documentary-Part-I/</id>
    <published>2015-09-26T10:50:08.000Z</published>
    <updated>2016-09-17T09:58:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>本着没有总结就没有进步的原则，早就想写这么一篇了（咱能不每篇都用这句话开篇么……）。嗯，接下来就是给今年十周年返校聚会做设计的一些记录。</p>
<p>题目来自于素材文件的文件夹名。在我的Evernote里面还有好多其他Project XXX，这种命名方式感觉是被日本人带坏了……</p>
<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>被拉进这次活动的契机非常神奇，大概是2014年底的某天（手机恢复了一次系统，微信记录已散佚），陈培同学找到我说明年有个毕业十周年的返校活动，能不能来帮忙，于是我就在懵懂中被拉进了一个大群。</p>
<p>而我和拉我进群的陈培同学在这时连见都还没见过，属于当年人人网误打误撞加的网友！甚至连网友都不属于很熟的那种！</p>
<p>2015年3月15号第一次在高中楼开会的时候，我对自己的定位还停留在海报设计师和摄影师的水平上，总想着应该还能找到更专业的人来干这事儿吧？</p>
<p>我意识到没有什么救世主也不靠神仙皇帝是在五月中旬。实际上，四月底的时候我还用2004届的Logo改了一份交了上去：</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7vvqt8lhvj20go0g741g.jpg" alt=""></p>
<p>没错，你们所有的照片和纪念品上的logo，险些就是这个样子……</p>
<p>5月底是第一份设计——邀请函截稿的日子，而要出邀请函的设计稿，必须搞定logo。当我意识到我不能交出这么个东西然后对别人说我负责了这次的设计的时候，我念了两句诗：</p>
<blockquote>
<p>这几天突然就发现要做的事情都赶到一块儿了……想起句非常喜欢的台词”With great power comes great responsibility”，虽然不喜欢《xx侠》类电影，但是这句台词真是从第一次听见就觉得很有道理。觉得累的时候有时就会用这话来洗脑打鸡血。<br>2015-5-20 08:16 来自 微博 weibo.com</p>
</blockquote>
<p>第一次系统的设计工作，开始了。</p>
<h2 id="设计过程"><a href="#设计过程" class="headerlink" title="设计过程"></a>设计过程</h2><p>我咨询了公司的美女设计师小英姐，她推荐给我一个网站<a href="https://www.behance.net/" target="_blank" rel="external">https://www.behance.net/</a> 经过一番钻研，我发现类似的成套的设计其实都可以分解成一系列按部就班的步骤。比如先确定一些独特的设计元素，或者先定下Logo，然后剩下的内容就比较好办了，往其他的设计内容上合理套用即可。</p>
<p>这是当时我在豆瓣发的心得：</p>
<blockquote>
<p>Showing V1.2 说:<br>从小一直对做原创工作的人很敬畏，也很想成为其中的一员，不过一直不太有信心。前一阵考察了不少设计，发现其实设计工作是一项系统工程，可以分解为无数不那么原创的步骤，但最终的效果依然非常惊人。又想起人们说的写小说的套路，大概世界上的创造性工作互相之间都有相通之处。哪怕是编程。<br>2015年5月24日</p>
</blockquote>
<p>所以，我要面对的第一个，可能也是最大的挑战，就是重新设计一个合适的Logo。</p>
<h3 id="Logo"><a href="#Logo" class="headerlink" title="Logo"></a>Logo</h3><p>它必须简洁，以便方便地复用在其他设计上，同时又必须显眼，让人一看就知道这个Logo描绘的是人大附中，不是别的什么。</p>
<p>最重要的，就是如上所说的，是它将为所有后续的设计打下一个可供发挥的基调。</p>
<p>像所有伟大的设计一样，这个设计的最初构思是描绘在<del>餐巾纸</del>日历上的。</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7vvudjo45j20zk0qoaf8.jpg" alt=""></p>
<p>然后细化成了这样：</p>
<p><img src="https://mir-s3-cdn-cf.behance.net/project_modules/1400/4751e129889607.560ebf094f91f.png" alt=""></p>
<p>如图，备选方案主要就是校门和校服。基本上，2004届的logo中已经把所有的标志性物体都堆进去了，而我要做的，是减法。</p>
<p>可能有读者不知道这里面提到的校门是什么样子，就是下面这张照片的样子：</p>
<p><img src="https://mir-s3-cdn-cf.behance.net/project_modules/1400/f06f3029889607.560ebf094c023.jpg" alt=""></p>
<p>随后我下载了之前只用过几分钟的AI，进行了第一波尝试：</p>
<p><img src="https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/5d11e929889607.560ebf094d196.png" alt=""></p>
<p>以及：</p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79jw1f7vwy4f7n6j21kw16oafl.jpg" alt=""></p>
<p>由于实在不认识什么设计界的人，我在微信上进行了无差别骚扰，因为聊天记录丢失，大部分的反馈已经记不清了，印象最深的是hww同学的反馈，她说字体实在是应该好好换一下，这和后面几天小英姐对请柬的评价如出一辙，包括第一版邀请函完成后发到微博，@洞悉帝 和zf同学也都有此反馈，让我一下子意识到自己对字体的敏感度有短板。</p>
<p>由于进度紧张，加上我认为把Logo放到上下文中会有助于决断，所以我在同时进行邀请函的设计。</p>
<p>我做出的第一版邀请函是这样的：</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7vvzz9rghj20gj0nedg1.jpg" alt=""></p>
<p>可以看到已经很接近最终版本了。而这时小英姐给我看了她百忙之中帮忙做的版本：</p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79jw1f7vw0w6gkgj20go0ovjs1.jpg" alt=""></p>
<p>跟专业的一比，一下找到了差距有没有……</p>
<p>小英姐对校门进行了修改，但是我权衡之下还是觉得未修改的版本对校友来说更打眼。有“10”这个寓意固然好，但为了凑出这个寓意把原有的形状模糊了就有点得不偿失。何况，我还是很喜欢“十”和校门边缘交叉的处理。</p>
<p>所以接下来主要的问题就是字体。这时小英姐设计中用到的字体给了我很大的灵感，她在其中用到了造字工房的郎宋体：<br><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7vw36v6fij20go0goq3h.jpg" alt=""></p>
<p>在此感谢造字工房对此款字体的非商业使用开放了授权。</p>
<p>这款字体的特点是竖笔粗，横笔细，我一下想到，这恰好与校门的形状可以对应！</p>
<p>经过一番调整，校门的形状大致确定，与文字搭配完美，但是又发现郎宋体的数字和英文相对而言达不到要求，需要另外找合适的字体。</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7vw4o6dmcj209r058aaf.jpg" alt=""></p>
<p>幸好公司会议室的书架上有一本<a href="https://book.douban.com/subject/4085474/" target="_blank" rel="external">《1000 Fonts》</a>，我拿来从头翻到尾，以纵向宽横向细为目标，找到了两款：Sardonyx和Serpentine。</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f7vwh1uqwnj20go0ciq6d.jpg" alt=""></p>
<p>经过对比和调整，最终使用的是Sardonyx的横向拉伸方案。最终完成体：</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7vwhn95waj218g0b4tae.jpg" alt=""></p>
<blockquote>
<p>中文字体: 造字工房 郎宋<br>英文/数字字体: Sardonyx bold</p>
</blockquote>
<p>Logo搞定以后，一套设计就有了设计的基本元素，下面的事情就好办多了。</p>
<h3 id="邀请函"><a href="#邀请函" class="headerlink" title="邀请函"></a>邀请函</h3><p>有了Logo，邀请函基本上只是在上面的设计图基础上把Logo套用进去即可。</p>
<p>我在6月12号的一次进度碰头会上第一次看到了邀请函的实体印制版本，当时很震惊在屏幕上看起来有些平淡的设计图一旦有了手感或者质感，居然会是完全另一种感觉：</p>
<p><img src="http://ww4.sinaimg.cn/mw690/5613ec79jw1f7wgiqtd7mj20hs0dcab7.jpg" alt=""></p>
<p><img src="http://ww2.sinaimg.cn/mw690/5613ec79jw1f7wgebwnlej21kw16ok5j.jpg" alt=""></p>
<p>这是继上次给徐经理印制送别明信片之后，又一次对“质感”这件事有所感悟。</p>
<p>在这次碰头会上，也定下了聚会需要的物料，除了工作组需要的背板工作牌等东西之外，重头戏是给返校同学的礼物——对我来说，就是下一阶段的设计任务。</p>
<p>一个是明信片，一个是在明信片上盖的印章，还有就是冰箱贴。</p>
<p>插播当时我在豆瓣发的广播：</p>
<blockquote>
<p>Showing V1.2 说:<br>虽然做校友返校聚会设计这事儿实情是实在找不到人我才顶上去的，但还是有种花大家的钱过自己的设计瘾的感觉……<br>最头疼的是找不到人来讨论问题，好像认识的人找不到搞艺术的……<br>2015年6月17日</p>
</blockquote>
<h3 id="冰箱贴"><a href="#冰箱贴" class="headerlink" title="冰箱贴"></a>冰箱贴</h3><p>冰箱贴是一波主打纪念品，非常重要。事实上在这个事情上我有个多年前的储备，就是在大学时拿高中楼道里的柜子作为原型练手做的一张图：</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7wpde7r7gj20l40ci76d.jpg" width="60%"></p>
<p>我十分想把它变成实物，也就是说，在家里的冰箱上复刻出高中楼道的感觉。</p>
<p>我甚至做了效果图：</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7wpfy2cdrj20xc0m8dpv.jpg" alt=""></p>
<p>但是在和总舵主（本次返校活动的总协调人）进行沟通时，她反馈说作为纪念品应该多少喜庆一点，这个方案虽然创意很好却不太搭。</p>
<p>我想了想，觉得还是很有道理的，于是改成了正统的冰箱贴设计：</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7wpjuxkqvj21a21a27ar.jpg" width="40%"></p>
<p>后来事实证明，这个选择还是正确的。</p>
<h3 id="明信片"><a href="#明信片" class="headerlink" title="明信片"></a>明信片</h3><p>有了上一次制作明信片的经验，加上这么多年基本都在做伪平面设计，这次对于明信片的设计任务我心里还算比较有底。按照习惯，最先进行的工作是：建立素材库。</p>
<h4 id="建立素材库"><a href="#建立素材库" class="headerlink" title="建立素材库"></a>建立素材库</h4><p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7wjrxxrylj21kw114wvp.jpg" alt=""></p>
<p>这个阶段将进行大量的搜索工作，换用各种关键词在flickr、tumblr、新浪微博和Google等处花式收集。当然，也包括自己这么多年在硬盘里持续的存货。（说实话，到这时我简直觉得这事除了我之外没几个人能干好。兵马未动，粮草先行啊！）</p>
<h4 id="选题"><a href="#选题" class="headerlink" title="选题"></a>选题</h4><p>接下来，要从素材库中选取若干有代表性的角度。说实话，真正的设计流程应该是先设计角度再去现场拍照——但我限于时间精力和不能随便进校园的实际情况，只能采取这种折中方案。</p>
<p>选题的原则大致是：有代表性，尽量分散，类似素材想办法合并，以最大化利用。</p>
<h4 id="制作"><a href="#制作" class="headerlink" title="制作"></a>制作</h4><p>大致如此（工作照摆拍）：</p>
<p><img src="http://ww3.sinaimg.cn/mw690/5613ec79jw1f7wk8b8aquj21kw11xwux.jpg" alt=""></p>
<h4 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h4><p><img src="http://ww2.sinaimg.cn/mw690/5613ec79jw1f7wk8izla9j218g121nih.jpg" alt=""></p>
<h3 id="背板及指路板"><a href="#背板及指路板" class="headerlink" title="背板及指路板"></a>背板及指路板</h3><p>活动当天的背板和引导用的指路板，当时后勤组要得很急，不过这个相对来说就好办很多，再次印证了有了Logo一切都顺其自然这一点。</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f7vx8emdo6j21kw0sgjvf.jpg" alt=""></p>
<p>6月21日完成。</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79gw1f7wos6mipnj218g0stdkf.jpg" alt=""></p>
<p>6月23日完成。</p>
<h3 id="胸牌"><a href="#胸牌" class="headerlink" title="胸牌"></a>胸牌</h3><p>胸牌也是简单的基于现有元素的组合，不需太复杂就能很舒服：</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79gw1f7wp34zfdoj20j60b4aaz.jpg" alt=""></p>
<p>6月24日凌晨完成。</p>
<h3 id="印章"><a href="#印章" class="headerlink" title="印章"></a>印章</h3><p>印章的设计是这次除了Logo之外挑战最大的部分，因为它不仅数量多（7个），而且没法像明信片那样<del>偷懒</del>找素材，只能自己手绘。</p>
<p>好在我在之前设计Logo的时候已经稍微摸清了一点Illustrator的门道，接下来现学现卖也算稍微有点底。</p>
<p>第一步依然是收集素材，只不过这回是作为绘图的参照。</p>
<p>草图：</p>
<p><img src="https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/48775729889607.5610dd307ae12.png" alt=""></p>
<h4 id="6月24日"><a href="#6月24日" class="headerlink" title="6月24日"></a>6月24日</h4><p>6月24日，前两个印章完成：</p>
<blockquote>
<p>Showing V1.2 说:<br>印章系列(完成度2/7)。PS. 有还上豆瓣的高中校友吗？虽然不是什么好设计但是在返校活动前看到还是请保密啊……<br>2015-06-24 01:37:51</p>
</blockquote>
<p><img src="http://ww4.sinaimg.cn/mw690/5613ec79jw1f7wn1wt96lj21kw143guu.jpg" width="70%"></p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79gw1f7wp06k8z5j20d209ndi7.jpg" alt=""></p>
<p>高中楼，完全在AI里面照着照片描的；</p>
<p><img src="http://ww3.sinaimg.cn/mw690/5613ec79gw1f7wn4azp7sj21kw22pha1.jpg" width="70%"></p>
<p>综合楼，上面的形状是餐盘，因为这楼下面两层都是食堂，最上面是阶梯礼堂。在描绘时使用了AI的透视模式。</p>
<p>字体与Logo保持一致，使用郎宋体。</p>
<h4 id="6月25日"><a href="#6月25日" class="headerlink" title="6月25日"></a>6月25日</h4><p><img src="http://ww1.sinaimg.cn/large/5613ec79gw1f7wnabiyv7j20t20h4dkc.jpg" width="70%"></p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79gw1f7wozgygfmj20hm08vdja.jpg" alt=""></p>
<p>以及：</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f7wndgakynj20t110t7b5.jpg" width="70%"></p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79gw1f7woxt5uj4j20hx0b70v2.jpg" alt=""></p>
<h4 id="6月26日"><a href="#6月26日" class="headerlink" title="6月26日"></a>6月26日</h4><p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7wnodm9p4j20so0lg41g.jpg" width="70%"></p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79gw1f7woz3glpqj20h30cpac0.jpg" alt=""></p>
<p>以及：</p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79jw1f7wnnnd61tj20sr0kc0wr.jpg" width="70%"></p>
<p>而最后一个印章也在制作中：<br><img src="http://ww3.sinaimg.cn/large/5613ec79gw1f7wnq9k6rzj20sz0tawhz.jpg" width="70%"></p>
<p>工作照：</p>
<p><img src="http://ww1.sinaimg.cn/mw690/5613ec79jw1f7wnz4kd91j20zk0qo0yh.jpg" alt=""></p>
<p>继现学AI之后又开始现学SketchUp xD</p>
<h4 id="6月27日"><a href="#6月27日" class="headerlink" title="6月27日"></a>6月27日</h4><p><img src="http://ww2.sinaimg.cn/large/5613ec79jw1f7wo0r07hoj21kw0y0qd6.jpg" width="70%"></p>
<p>至于最终印出来的样子是什么样呢？依然延续了“成品让人惊叹”的定律，请继续阅读下一篇。</p>
<p>至此，轰轰烈烈的巨型设计现场进行了一个多月终于告一段落，距离真正的活动也进入了最后一周倒计时。</p>
]]></content>
    
    <summary type="html">
    
      在高中毕业十周年返校聚会即将到来的时候，我临危受命被抓来设计与之相关的一系列物料。&lt;br&gt;这是对整个设计过程进行记录的系列文章之一，记述了一次完整的设计流程。
    
    </summary>
    
      <category term="Design" scheme="http://zshowing.github.io/categories/Design/"/>
    
    
      <category term="Design" scheme="http://zshowing.github.io/tags/Design/"/>
    
  </entry>
  
  <entry>
    <title>那些女孩教我的事</title>
    <link href="http://zshowing.github.io/2015/07/27/lessons-that-girls-taught-me/"/>
    <id>http://zshowing.github.io/2015/07/27/lessons-that-girls-taught-me/</id>
    <published>2015-07-27T10:55:56.000Z</published>
    <updated>2016-09-16T13:08:31.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>这是个早就想写但一直不知怎么下笔的题目，记得不久前曾经努力开过一个头，刚才找了一下，发现正好是半，年，前……</p>
<p>题目出自胖哥当年在KTV特别爱点的一首歌，但严格说来要写的内容基本上还是自己悟出来的。</p>
<p>之前迟迟下不了笔的原因在于，这篇跨度从小学到现在的东西线索过于庞杂，又不想写成流水账。</p>
<p>而现在匆匆下笔的原因则是，我急需跟自己讲明白道理。</p>
<p>想来想去，还是分成几个“Before&amp;After”比较清楚。</p>
<h3 id="颜控去死"><a href="#颜控去死" class="headerlink" title="颜控去死"></a>颜控去死</h3><p>说起来，我最为彻底的进步就是认清了这件事：你不能仅仅因为一个女生漂亮就爱上她。</p>
<p>说起来轻巧，实际上这却在很大程度上是在挑战一个人的本能。</p>
<p>君不见各国的爱情片里，充斥着类似的所谓一见钟情桥段？</p>
<p>总结起来，这件事发生的年代基本上是在心智尚未成熟的年代，比如小学、初中（以至于后来我不认为初中有过真正喜欢过谁）、高中刚开始。最后的一个事例大概是大学时的小师妹事件。</p>
<p>意识到这么做不对也不是件很难的事情，只需要有过几次失败自然能想明白。到后来我对于这点认识得越来越清楚，比如大学时的小慢，比如公司里的湖南妞儿，比如在HIMYM完结活动中偶然认识的小美女，都严格恪守了这条规则，没有让内心有更多的波动。</p>
<h3 id="谢绝杀熟"><a href="#谢绝杀熟" class="headerlink" title="谢绝杀熟"></a>谢绝杀熟</h3><p>一句话，你不能因为和一个人很熟，就任性到非要和她在一起。</p>
<p>托班里女生质量比较高的福，在漫长的岁月里，我几乎在不同的时间段里爱上了所有的熟人。指特别熟的那种。幸好，最后我只搞砸了一次，其余的全被我权衡后花几个月时间克制住了，可喜可贺。当然，如果在美剧里这可能不算什么= =</p>
<p>显然，我证明了“熟”和“在一起”不是充要条件。应该说，两者不管从谁都推不出对方。</p>
<h3 id="聊得来？再想想？"><a href="#聊得来？再想想？" class="headerlink" title="聊得来？再想想？"></a>聊得来？再想想？</h3><p>目前为止最有欺骗性的特质就是所谓“聊得来”。</p>
<p>这里所说的“欺骗性”，不是指女生故意欺骗，而是你很难意识到在你们看起来巨聊得来的背后，是什么在支撑。</p>
<p>有的女生，天生话痨。她跟你聊得来没错，她也和剩下的中国人聊得来。她还和部分英语国家的人聊得来，取决于她的英文水平。</p>
<p>有的女生，在和你聊得来的表象下，其实有着一种让对话进行下去的使命感。一旦她失去了这种动力，你会发现你们之间其实无话可说。</p>
<p>你还可以举一反三。总之，如果你没有注意到这些现象背后的本质，你会陷得非常深，你甚至会抑郁——因为你会觉得，你无力改变你遇到的事情。然后你会发现，这不是认知偏差，这是真的。</p>
<h3 id="感动是无法复制的"><a href="#感动是无法复制的" class="headerlink" title="感动是无法复制的"></a>感动是无法复制的</h3><p>我觉得有必要把这一点单提出来，因为在当下非常有现实意义。</p>
<p>曾经遇到过一些非常非常非常非常让我感动的事情，感动到险些去追给我带来这份感动的女生。</p>
<p>幸亏没有。</p>
<p>如果你稍微有点思考能力就会明白，一天天的生活不是靠感动来感动去继续下去的。</p>
<p>诚然，做出让你感动的事情说明她有一颗金子般的心。</p>
<p>然并卵好吗！！</p>
<p>这与能让你们的关系发展下去，相关系数无限近似于零。</p>
<h3 id="事件是无法复制的"><a href="#事件是无法复制的" class="headerlink" title="事件是无法复制的"></a>事件是无法复制的</h3><p>而另外一些时候，你不是被打动，而是经历了一些你从来没有跟女孩子一起经历过的事件。</p>
<p>比如某年暑假，跟A同学，从附中的操场翻窗户进到高中楼，像特工一样避开高中楼保安；<br>比如某年春天，跟B同学见面时，超偶然地一起玩了个公园里的刺激性游乐项目；<br>比如前一阵，在一个聚餐里，我去敬C同学表示感谢时，她反而一边和我说话一边哭得梨花带雨……这也是我必须要写这篇东西的原因。（必须说，这件事同时也符合上一条，我被感动得一塌糊涂）</p>
<p>麻省跳大神学院的占卜研究表明，只有智商低于27.5的物种，才会把偶然发生的事件，当成必然发生。</p>
<p>你被这些事件震撼，唯一能得出的结论是，你经历得太少。仅此而已。End of story.</p>
<h3 id="Be-Attractive"><a href="#Be-Attractive" class="headerlink" title="Be Attractive"></a>Be Attractive</h3><p>说了一大堆Don’ts，有没有什么Do呢？</p>
<p>上面写的这一点就是我意识到的最大的To do. 来自zf同学在某一年的微博评论。</p>
<p>神奇的是，当时我居然对这个评论还没当回事，这是直到后来我又经历了一些事情，再翻到时才惊讶地发现的。</p>
<p>原话差不多是：</p>
<blockquote>
<p>“不要总想着useful啊，要想想怎么让自己attractive啊！”</p>
</blockquote>
<p>这大概是我最难改的顽疾了，直到现在我有时还忍不住会去想自己有什么用，能怎么帮到对方。</p>
<p>吴彦祖能怎么帮到你了？</p>
<p>圆通快递的取件小哥倒是能天天帮你。</p>
<p>哦，热心的水管工东尼大木老师也可以。</p>
<h3 id="女生不是追来的"><a href="#女生不是追来的" class="headerlink" title="女生不是追来的"></a>女生不是追来的</h3><p>曾经特别不理解“追”和“表白”这两种行为。</p>
<p>上面说到useful，其实追的本质就是个展示自己用处的过程。</p>
<p>你把姿态放得很低，“我能陪你！我能给你买早餐！我还能带你去看这个世界！”</p>
<p>谁不能啊？</p>
<p>表白就更可笑了，我一直对一个场景脑补不能，就是女神在某天答应了穷追良久的屌丝的表白，接下来这俩人能怎么相处。</p>
<p>描绘屌丝追女神的殿堂级作品《I’’S》，对此的处理办法是：留白。</p>
<p>绝妙的处理办法啊！！反正我当时特别激动地觉得终于可以解惑了，结果是硬生生地给作者行了个跪拜大礼。</p>
<p>直到大学时有一天看BBS的帖子，有人说，表白这事其实应该就是个过场，至少也是要到有九成把握了再干。</p>
<p>顿悟。我一下子觉得，这样整个过程就都讲得通了。</p>
<p>强行表白基本上是要给自己找个交待的那种，属于自杀性爆炸范畴。</p>
<p>武断一点的说，女生不是追来的，你只是让她确认心里的不确定，仅此而已。</p>
<p>这是至今依然总也记不住的一件事情。</p>
<h3 id="性格，性格，还是性格"><a href="#性格，性格，还是性格" class="headerlink" title="性格，性格，还是性格"></a>性格，性格，还是性格</h3><p>总结一下，到现在，有一点基本是肯定的，就是两个人是不是适合在一起，性格，或者气场，或者whatever类似的东西，是决定性因素之一。</p>
<p>所以对于男生来说，实际上自身的素质决定了选择面的宽窄。你的性格越多样，就越能和越多类型的姑娘搭。</p>
<p>像我这样的闷骚型，就无悬念的一定要找自带话题少女。</p>
<p>伤感，但没办法，这个世界就是这样。</p>
<p>“出场自带500多斤的伤感”。</p>
<h3 id="没有一个帝国是靠谦卑维持的"><a href="#没有一个帝国是靠谦卑维持的" class="headerlink" title="没有一个帝国是靠谦卑维持的"></a>没有一个帝国是靠谦卑维持的</h3><p>2013年9月，我借着给HIMYM第八季写影评的借口，狠狠地抒发了一下自身的思考结果。</p>
<p>我写道：</p>
<blockquote>
<p>“Ted比我强的最关键的一点就在于，在对孩儿他妈的长期寻找中，他一直在使自己变得更强大，变得更吸引人。他会滔滔不绝地与你谈论他喜爱的领域，会去做各种看起来很傻但是很有意思的事情，同时，不放弃自己即将遇到小黄伞的信念（虽然一直拿着本《霍乱时期的爱情》在地铁上看这种钓鱼行为令人非常Orz）。 </p>
<p>只有这样，在真正遇到“老妈”的时候，你才能让她感到开心，你的光辉才能让她也彻底爱上你。所谓的命中注定，无非是实力超群——至少是实力相当。 </p>
<p>没有一个帝国是靠谦卑维持的。感情也一样。 ”</p>
</blockquote>
<p>一段现在看来依然带着寒光的文字。</p>
<p>2015年7月，依然倒在了同一段文字前面。</p>
<h3 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h3><p>之前和朋友说过，经过我对自身经历的仔细思考，如果仅仅从性格上讲，和我最搭的是D同学。</p>
<p>相处模式是这样的：她给我讲故事的时候，我吐槽。她不讲故事的时候，我就逗闷子。</p>
<p>我还知道哪些点会“激怒”她，我会没事闲的故意往这个点上引。北京话里这叫贱招儿。</p>
<p>得到的反馈是胳膊上的一顿猛掐。</p>
<p>经常是一节课下来，累倒是不累，反而笑得肚子疼。我外加胳膊疼。</p>
<p>如果我至今还残存一些逗闷子的能力的话，大概有八成是那个时候养成的。</p>
<p>这种相处模式并不新奇，但如果放在这十几年在和女生交往中长期的暗色调经历里面，这几乎是其中唯一的一抹亮色。</p>
<p>所以，它一定有一些特别的地方。</p>
<p>分析了一下，首先，在异性朋友里面，她是和我关系最好的人里面唯一一个特别外向的；其次，我并没有爱她，因此，我完全不必顾忌自己的形象（其他经历中我都是小心翼翼）；另外，我们没有一方明显弱势，基本势均力敌；最后，我们都很看重对方这个朋友。</p>
<h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>我一直觉得，人总是要长点记性的。</p>
<p>我喜欢写文章总结东西，因为除了写诗之外，写作其实是一件非常需要理性的事情。在你心乱如麻，脑中充斥着万千种想法的时候，只要你能坐下来把你的问题像模像样地筹划成一篇文章写下来，一般情况下就能好很多。</p>
<p>而近几年，这个大杀器的使用频率是眼看着越来越少。</p>
<p>这篇文章之所以早就想写，是因为我一直想整理一下到目前为止遇到的事情，以便提醒自己不要重蹈覆辙。毕竟很多时候，这里面列出的反例并不是那么显而易见，甚至需要挑战人性。</p>
<p>所谓的Perfect Match也许根本不会遇到，但能长期相处的人基本上还是应该有个baseline的。</p>
<ul>
<li>一个真心欣赏你的人。</li>
<li>一个至少在和你说话时自带话题的少女。</li>
<li>一个既不会强势也不会弱势的朋友。</li>
</ul>
<p><juno>里面有一首歌，里面有这么一句，给我留下了极深的印象：</juno></p>
<blockquote>
<p>“You’re a part-time lover and a full-time friend.”</p>
</blockquote>
<p>差不多就是这样。</p>
<h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>本来一直觉得自己的经历非常苍白，但总结下来居然觉得自己要赶上Ted了……</p>
<p>说起来，虽然前面说了好多“暗色调”的事情，但总体上，我还是非常感激生命中的那些过客。<br>不只是因为我自己也是过客，而是，刚才我在翻之前写的东西的时候，看到了这么一句：</p>
<blockquote>
<p>2013-02-28 14:33:22 《两年》<br>无论如何，我要感谢。我险些忘记，我还能如此开心。</p>
</blockquote>
<p>生命，就是这样才井猜的啊。</p>
<p>说到Ted，我觉得在影视作品里我几乎找不到比他更像我的人了。</p>
<p>今后，我也特想偷他的这句话：</p>
<blockquote>
<p>Kids,<br>This is how I met your mother.</p>
</blockquote>
<p>2015.7.26 凌晨 初稿<br>2015.7.27 白天 续完并改二稿<br>2015.7.29 深夜 补充“女生不是追来的”一段</p>
]]></content>
    
    <summary type="html">
    
      这篇文章总结了前二十几年在和女孩的交往中所积累的人生经验。&lt;br&gt;Kids, this is how I met your mother.
    
    </summary>
    
      <category term="Life" scheme="http://zshowing.github.io/categories/Life/"/>
    
    
      <category term="Love" scheme="http://zshowing.github.io/tags/Love/"/>
    
  </entry>
  
  <entry>
    <title>Superfly - My Best Of My Life</title>
    <link href="http://zshowing.github.io/2015/05/28/Superfly-My-Best-Of-My-Life/"/>
    <id>http://zshowing.github.io/2015/05/28/Superfly-My-Best-Of-My-Life/</id>
    <published>2015-05-27T17:20:10.000Z</published>
    <updated>2016-09-18T15:33:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>那天傍晚，天已擦黑却又泛着神奇的亮蓝色，我骑车飞驰在路上，脑子里蹦出的是这首歌的前奏。<br>如果你听过这首歌，你就知道这是件顺理成章的事情——每次《Boss》那部剧演到最后这首歌响起的时候，我脑子里就会脑补出傍晚的亮蓝色。</p>
<p>然而我要说的不是这个。</p>
<p>最近因为机缘巧合，经常想起500多天前那段时间。</p>
<p>在一篇2013年11月4日的<a href="http://spacesoaring.blogbus.com/logs/236796474.html" target="_blank" rel="external">blog</a>里，我写道：</p>
<blockquote>
<p>我面对的是26年来最让自己不满意的一个自己。</p>
</blockquote>
<p>那时的我不仅是不满意，而且是束手无策，坐以待毙，疾病缠身，还正赶上公司有个大新闻……啊是大项目，周末加班，平时时不时地还得在家继续在dropbox同步过来的工程上工作到凌晨去，盆友们，女四们，先生们，全果过族人民，这是闷声大作死的节奏。</p>
<p>那篇blog的最后我是这么写的：</p>
<blockquote>
<p>其实现在最想恢复的是，那种喷薄的创造力，好久都没有创造过什么人世间不存在的东西出来了。</p>
</blockquote>
<p>通常在那种境况下的心理活动才最纯粹和真实，把这篇blog淡忘许久之后再回过头来看，我才发现我一直在追求，也最给我满足感的，正是这种创造感。</p>
<p>然而我也暂时不想说这个。</p>
<p>我想说的是，今天好几个人通过各种方式发来滋瓷，问啥叫end of era？</p>
<p>我的解答是，因为一个同事昨天离职，一共工作500多天，那位同事刚来公司的时候，恰好是我坠不吼的时候。现在回过头看，简直就是一个时代的终结。</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7y5syal9lj20t70ootau.jpg" alt=""></p>
<p>500天前的自己大概很难想象现在的状态。</p>
<p>之前一直很喜欢刘慈欣的一个观点，“美好人生的关键，在于你有没有迷上什么事物”。现在我更进一步觉得，人生的本质其实就是个对时间资源的分配。你会欣然把你的时间放到你迷上的事物上面，并且不愿意在不够喜欢的事物上多花费一分钟时间。</p>
<p>比如看张佳玮张公子写料理，并不是不饕餮，而是觉得一碗煮馄饨花的时间刚好符合自己对吃饭这件事的预期；<br>比如看文章里写每天要跑够40分钟以上才叫有效锻炼，并不是不想有效锻炼，只是觉得我对锻炼这事的容忍度也就仅于此（现在已改为骑车，完全不占时间，顺便就上班了=.=）；<br>比如一波一波的美国大片袭来，并不是完全不想去电影院看，只是对看电影这件事所花费的时间非常在意，口碑差的就会觉得去电影院很不值。</p>
<p>能挑起我兴趣的，从始至终，就是创造个什么新东西。任何种类都算。</p>
<p>我觉得活到现在才刚刚算活明白点儿。</p>
<p><br><br>现在？</p>
<p>听听开头提到的那首歌吧。</p>
<p>然后感激一切人和事。</p>
]]></content>
    
    <summary type="html">
    
      一首歌，一点人生感悟。
    
    </summary>
    
      <category term="Life" scheme="http://zshowing.github.io/categories/Life/"/>
    
    
      <category term="Life" scheme="http://zshowing.github.io/tags/Life/"/>
    
      <category term="Music" scheme="http://zshowing.github.io/tags/Music/"/>
    
  </entry>
  
  <entry>
    <title>Bye，经理</title>
    <link href="http://zshowing.github.io/2015/05/18/bye-manager/"/>
    <id>http://zshowing.github.io/2015/05/18/bye-manager/</id>
    <published>2015-05-18T13:46:50.000Z</published>
    <updated>2016-09-16T13:02:34.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h3><p>5月12日，天高云淡，惠风和畅，正在我鱼块地和PM同学讨论问题的时候，突然看到了这么一行：</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79gw1f7ve8uabo0j205509xdg1.jpg" alt=""></p>
<p>图中名crystal者，徐经理也，加入公司一年有余。初来时是实习生，除从事产品工作外，还负责大大小小的从数据整理到新闻运营等各种琐碎的杂活儿。半年后经理读研毕业，便顺势正式进了公司。</p>
<p>把聊天记录翻到头，经理加入的日期是2013年11月12日，我恰好处于一个心情的低谷期。记得这样的巧合当时还让我相当惊异了下，不过她给我的第一印象却是：</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79gw1f7ve8ufur6j208708mdgi.jpg" alt=""></p>
<p>嗯……一个自带呆萌加成的形象呼之欲出（好委婉）。</p>
<p>后来一长段的聊天记录都是工作上的事情，我是个相当慢热的人，别人不多扯淡，我也不会自来熟。大概三四个月后，才慢慢地在QQ上贴个用户反馈里的乐事儿，或者吐个公司内部的槽。</p>
<p>总之……慢慢就成了公司里最能随便闲聊的同事。</p>
<p>所以，以往公司同事离职都是某一天突然发现那个人不见了，这次是唯一一次，在同事离职之前半个月，就拿到了消息。</p>
<p>能做点什么呢？</p>
<h3 id="灵感"><a href="#灵感" class="headerlink" title="灵感"></a>灵感</h3><p>我翻看了下手机里的照片，正巧发现了很早拍的一张午休时的抓拍：</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79gw1f7vehezovbj20go0m8784.jpg" alt=""></p>
<p>于是，一个点子出现在脑海里：我可以做个卡片嘛！<br>大概是这个样子：</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79gw1f7vehez2gpj20go0oo77q.jpg" alt=""></p>
<h3 id="Days-in-TouchChina"><a href="#Days-in-TouchChina" class="headerlink" title="Days in TouchChina"></a>Days in TouchChina</h3><p>接着，索性又去弄了些素材，扩展成了“Days in TouchChina”系列：  </p>
<h4 id="Days-in-TC系列之产品部座位图"><a href="#Days-in-TC系列之产品部座位图" class="headerlink" title="Days in TC系列之产品部座位图"></a>Days in TC系列之产品部座位图</h4><p>注：头像来自设计部同事自己的设计</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79gw1f7veheq1hwj20go0oo0u5.jpg" alt="Days in TC系列之去年的产品部座位图（头像是拿来的）">  </p>
<h4 id="Days-in-TC系列之桌面"><a href="#Days-in-TC系列之桌面" class="headerlink" title="Days in TC系列之桌面"></a>Days in TC系列之桌面</h4><p><img src="http://ww3.sinaimg.cn/large/5613ec79gw1f7veheycf6j20go0oodif.jpg" alt="Days in TC系列之桌面">  </p>
<h4 id="Days-in-TC系列之考勤卡"><a href="#Days-in-TC系列之考勤卡" class="headerlink" title="Days in TC系列之考勤卡"></a>Days in TC系列之考勤卡</h4><p><img src="http://ww4.sinaimg.cn/large/5613ec79gw1f7vehexq3tj20go0oojvf.jpg" alt="Days in TC系列之考勤卡">  </p>
<h4 id="工作照摆拍"><a href="#工作照摆拍" class="headerlink" title="工作照摆拍"></a>工作照摆拍</h4><p><img src="http://ww4.sinaimg.cn/large/5613ec79gw1f7veem1cekj21kw16oqr0.jpg" alt=""></p>
<h3 id="致经理"><a href="#致经理" class="headerlink" title="致经理"></a>致经理</h3><p>自己觉得简直是半成品一样的设计，但是不知道该怎么修改了……</p>
<p>还好，程序员做设计，没人会苛责什么。</p>
<p>——谨以此致经理。</p>
]]></content>
    
    <summary type="html">
    
      “经理”，又叫徐经理，是以前公司的产品经理，因为比较熟，所以经常开玩笑地这么叫她。&lt;br&gt;这篇文章记叙了当时在她离职之前，我对送她的离职礼物的考虑和设计。
    
    </summary>
    
      <category term="Design" scheme="http://zshowing.github.io/categories/Design/"/>
    
    
      <category term="Design" scheme="http://zshowing.github.io/tags/Design/"/>
    
  </entry>
  
  <entry>
    <title>出游前夜</title>
    <link href="http://zshowing.github.io/2014/10/16/Night-before-travelling/"/>
    <id>http://zshowing.github.io/2014/10/16/Night-before-travelling/</id>
    <published>2014-10-16T15:24:43.000Z</published>
    <updated>2016-09-19T03:53:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>休假之前居然有几个小时的闲暇时间，这显得很不真实。</p>
<p>事实上，这周一起这种不真实感就在积聚。休假是一回事，休假之前要忙死是另一回事。我看了一下昨天才从杂物堆里翻出来的去年的记录本，有关去年日本行前的状态是这么写的：</p>
<blockquote>
<p>……之前是一串连续的加班动作，而且在周六前甚至一直以为出发时间是在下周二。</p>
<p>周六晚上还去了国家大剧院看话剧，10点半才到家。此时还得改程序、把酒店都缕好、收拾行李。干完这些，又到了凌晨四五点钟。<br>在一身的疲惫中睡了过去，定了6：30的闹钟。</p>
<p>……</p>
</blockquote>
<p>这一年多以来，好像是没有真正放空的时候，总是一件事接着另一件。除了旅行相关的准备不谈，工作任务的deadline，去4S店看车，帮朋友做网页，各种必须出席的事情……记得2012年曾经有过一段平均一两天看一部电影的日子，正是那时我的观影量从200部以下整整翻了一倍；今年则在大部分时间只能拿出每天的15分钟时间看一集《海女》，看剧的时间太多就会心下不安，因为还有那么多积压着要去做的事情。</p>
<p>我屋里最明显的例证大概就是，去年从日本带回来的东西，用两个塑料袋装着，原封不动地摆在地上，一直没顾得上去整理。</p>
<p>不过总的来说过得还是充实又开心的哈哈，从沉重的色调拉回来，扯了这么多才想到，说是这次和之前不同，其实更深一层是觉得现在的状态似曾相识，这才想起要去打下一些文字。</p>
<p>想起一年前去日本的那次，之所以印象深刻，是因为那是我第一次出国。看爸爸去哪儿相关的节目，那些小孩子很小就满世界转悠，那样绝对是好处多多，可能唯一的缺点就是让人没法深切地体会自己第一次出国是什么状态。</p>
<p>说实话当时自从我从机场出来一直到进旅馆打开电视休息，我一直都处于一种难以置信的状态。这种难以置信与周围的任何景物都无关，我只是一直在问自己这个问题：“我这就在国外了吗？”然后平均10秒钟确认这一点一次……</p>
<p>明天抵达ROC的体验，怕是不会再复制上面的那种感受了。这就像冲破了一层结界，只要走出国门一步，这一层就被你攻破，下一次再有类似的感觉，怕是得登月了啊……</p>
<p>写到这里，觉得那些小孩子们错过了相当重要的体验呢【抠鼻】。</p>
]]></content>
    
    <summary type="html">
    
      去台湾休年假前的一些碎碎念。
    
    </summary>
    
      <category term="Life" scheme="http://zshowing.github.io/categories/Life/"/>
    
    
      <category term="Life" scheme="http://zshowing.github.io/tags/Life/"/>
    
      <category term="旅行" scheme="http://zshowing.github.io/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>Words on Photography 2013</title>
    <link href="http://zshowing.github.io/2013/12/22/Words-on-Photography-2013/"/>
    <id>http://zshowing.github.io/2013/12/22/Words-on-Photography-2013/</id>
    <published>2013-12-22T15:15:07.000Z</published>
    <updated>2016-09-17T01:40:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>现在回想起来，我的摄影之路呈现出了最典型的自然演变趋势：最开始是05到09年用诺基亚6670照的几千张记录生活的照片，然后是09年初购入卡片机后的记录生活与有意创作混合阶段，仅仅两年时间就又是上万张，最后才是今年年中时购入的单反（初衷还有很大一部分是为了照人像）。</p>
<p>也许正是因为这样的轨迹，让我有个坚定的摄影理念，就是要尽量还原现场，在这个基础上再去追求美感。倘若最后照出的景色与肉眼所见的大相径庭，那即使照片再好看，其存在的价值也不高。</p>
<p>这次在青旅中遇到了几个台湾游客，那是我第一次近距离接触比较专业的摄影人士，也聆听了许多指点而受益匪浅。但当我后来在Facebook上看到他们出的片子时，就发现他们的照片清一色地修片过度。</p>
<p>这不仅不能叫记录，这种修片行为也不能叫艺术创作。</p>
<hr>
<p>之前一直觉得，摄影在艺术创作领域的等级比较低，因为它出片太快，运气成分居多，不像其他艺术形式需要那么多脑力和精力投入——这是个几乎只凭天赋和审美就能做好的事情。</p>
<p>直到最近我才慢慢体会到，其实不是这样。能不能找到完美的构图仍然需要良好的艺术素养甚至是丰富的经验，有时还需要大量的时间和良好的耐心，更不用说在不同的光线条件下如何手动调节相机参数这些技术活。</p>
<p>这也是当我把相片发到人人网上之后，有个人追着要加我好友时我感到出乎意料的原因，我深深觉得自己的功力很渣，在看到别人拍的同样题材的照片时常常感到差距。我甚至对自己起家的观察生活的能力感到怀疑，我对生活的观察力还依然敏感吗？</p>
<hr>
<p>当把你扔到日本之后，你会拍些什么呢？</p>
<p>你一定会觉得简直处处都是可拍的，对不对？</p>
<p>没错，我也是这么想的。接下来的问题就是，要怎么拍呢？</p>
<p>这是当手中的设备换为单反后，我面临的最大问题。尽管单反的响应速度是其他相机的若干倍，可我的快门数几乎还降低了一些。这件庞然大物拿到手上，单纯记录生活的念头就会不由自主地被对美感的追求所压制。</p>
<p>也许，这种“累”还是因为缺练吧。现在回想起来，可拍的东西真的太多。</p>
<hr>
<p>与上一条有些矛盾的是，像我很早以前写的（<a href="/2009/04/20/Words-on-Photography/">《絮语摄影》</a>）那样，我还是不太习惯去拍那些“看不出是在哪里拍的”的静物，虽然已经改了不少。这点在看别人的作品时还不时会感到刺痛。</p>
<p>最近加班太多，不在写作状态，最想写出的大概就是这几点。收笔。</p>
]]></content>
    
    <summary type="html">
    
      一些对摄影的总结，第二弹。
    
    </summary>
    
      <category term="Photography" scheme="http://zshowing.github.io/categories/Photography/"/>
    
    
      <category term="Photography" scheme="http://zshowing.github.io/tags/Photography/"/>
    
  </entry>
  
  <entry>
    <title>Inner Peace</title>
    <link href="http://zshowing.github.io/2013/05/27/Inner-Peace/"/>
    <id>http://zshowing.github.io/2013/05/27/Inner-Peace/</id>
    <published>2013-05-27T13:04:41.000Z</published>
    <updated>2016-09-19T03:45:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>改bug间隙来透口气。</p>
<p>有个问题每隔一段时间就会浮上我的脑海——在过去的时光中，哪段时间是最值得让你怀念的？晚上在下班回家的地铁上，这个问题又一次莫名闯进心头。</p>
<p>记得在高中和大学时还经常会想在睡前要想些什么才能更好地入睡，这个毛病在大学毕业前已经不治而愈（主要那时每天都是困到一沾枕头就着的地步才去睡觉OTL）；但上面的那个问题一直伴随了下来。</p>
<p>其实并没有仔细想过为什么会去想这个，也不知道其他人会不会去想它，对于我来说，这个问题的最大特点是它一直没有确定的答案，之前的每段时光，哪怕是高三和朋友间关系最好的时候，也都有某件事情压在心底，阻碍了那种纯粹的快乐。所以，每次考虑这个问题时都会在几段时间中对比一阵然后作罢。</p>
<p>不过刚才，我却发现，这个问题其实有了答案。其实答案就是，工作之后半年到一年多的那段时光。</p>
<p>那段时间虽然没有太过让人兴奋以至于睡前会想着的事情，但却是难得的心底没有半点事情压着的放松时间=v= 在那段时间里，我终于有钱去买了PS3，买了捷安特ATX770，败了箱子，败了大耳机，换了大电视，买了Kindle，买了许多之前一直想买的东西；我从《美国丽人》和《盗梦空间》的启蒙开始，放下了对烂片的恐惧，进入如痴如醉的狂补电影的状态；我每天吃晚饭时一集美剧/日剧/动画；周末朋友会来家里一起玩PS3（现在已经不来了嗯），这也算是赶上了末班车吧……我还会在京东每次搞活动的时候囤书然后开心地等待收货……</p>
<p>当年得瑟的微博：</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f7ypli8kjcj20ss0os0zo.jpg" alt=""></p>
<p>这大概是我头一次，心安理得地花大把的时间去做这些“无用”的但是自己喜欢的事儿（大四的时候颇不心安理得），也是头一次，有能力去随心所欲且无负罪感地购买自己喜欢的东西。</p>
<p>这时的我感觉自己真正在支配自己的时间，也感觉自己能做成任何事，因为只要有时间，我就能掌控我的未来。</p>
<p>写到这里时其实还有点不甘心，毕竟怀念这么宅的一段时光没什么光彩的，但也许对我来说，内心的平静确实非常难得。</p>
<p>嗯，胡乱写点东西。看来只能去睡觉了。</p>
<p>以上。</p>
<hr>
<p><em>附一篇相关的短文，写于2015年12月19日：</em></p>
<p>下午三点多的时候撑不住去休息室躺了一会儿，其实也并没有完全睡实，就是处于半梦半醒的那种状态。</p>
<p>然后好像就梦见了高二还是高三时的那间教室。</p>
<p>没有梦见任何一个人，就是简单的一个场景。可能是一个阳光满地的初夏午后。</p>
<p>我没有系统学过心理学，不过感觉潜意识这种东西非常实用主义且简单粗暴。你需要什么，它就找个最符合的意象给你。</p>
<p>大概那间教室所对应的环境，就是迄今为止最放松的状态吧。不知道其他人在类似情况下会想起什么，反正几乎每次很累或者压力很大的时候，系统都会自动调起这段记忆——谁知道呢，没准，压根就是在记忆的基础上生造出了一个理想化的什么岁月静好的场景罢了。</p>
]]></content>
    
    <summary type="html">
    
      回顾了最让我感到内心安定的时刻。
    
    </summary>
    
      <category term="Life" scheme="http://zshowing.github.io/categories/Life/"/>
    
    
      <category term="Life" scheme="http://zshowing.github.io/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>iOS App“格子箱”试用研究</title>
    <link href="http://zshowing.github.io/2012/07/18/analyze-about-the-ios-app-gezbox/"/>
    <id>http://zshowing.github.io/2012/07/18/analyze-about-the-ios-app-gezbox/</id>
    <published>2012-07-18T03:13:00.000Z</published>
    <updated>2016-09-18T14:24:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>现在每天新出的移动端app众多，但随之能让人真正驻足留意，以至花时间投入其中的app就太少了。也正是因此，当我发现自己居然在没人推荐的情况下，被一个完全没有熟人的社区吸引的时候，我就暗暗震惊，并且出于敏感开始收集这个app是如何做到这一点的。</p>
<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>最开始发现这款app，神奇地与任何app推广形式都没关系，而是起始于我搜索相机信息时，搜到了一篇对微单和单反的对比文章<a href="https://www.douban.com/note/202625985/" target="_blank" rel="external">《单反还是微单？他们选择了……》</a><strong>（2016年注：原链接已挂，只能搜到该团队在豆瓣运营的帐号发表的同名日志）</strong>：</p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79jw1f7y3bnmlsij20hs0eiq44.jpg" alt=""></p>
<p>仅就这篇文章来讲，初看之下其成文角度非常新颖，在众多疑似枪文的评测之中，这篇文章在少量讲解之后配以大量的实例，而“在格子箱内，所有使用微单相机的用户，有40%的人选择购买了索尼Nex-5系列”这样的数据流风格，也完全符合我数据控的口味。</p>
<p>于是我开始翻看这个博主的其他文章。</p>
<p>在<a href="http://www.19lou.com/forum-1440-thread-9901329960441003-1-1.html" target="_blank" rel="external">《有了iPhone和Mac，还需要……？》</a><strong>（2016年注：这篇更是只能在一个莫名其妙的社区的转帖中才能找到尸体）</strong>这篇文章中，这种数据流发挥到了极致。“21%的Mac用户购买了Lamy笔”，“10%的用户购买了参天 Sante FX Neo眼药水”这样的统计数据彻底撩起了我的兴趣，虽然我还没搞清楚这个app究竟是干什么的，对这种细致分析的认同和追随也促使我去下载了这款app。这时是6月19日。</p>
<p>到这里我认为比较重要的一点是，新颖的原创文章，翔实的真实数据对用户的吸引（用户能得到别处得不到的有条理的信息）。同时，还发挥出了自身社区的长处（这也是别处不可替代的）。不可否认的是这样的文章对文字编辑要有很高的要求。
</p>
<h3 id="第一印象"><a href="#第一印象" class="headerlink" title="第一印象"></a>第一印象</h3><p>格子箱app（v2.0以前）打开之后如图所示：</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7vuxgsj1ej21kw0sstna.jpg" alt=""></p>
<p>最上面的大图就是前面提到的专题。如果说网上的文章是导火索，在程序中对应的专题则起到了巩固作用。这些专题让我觉得真的得到了一些新鲜的（而且在不断更新的）消息，是一个蛮特别且颇专业的RSS feed。(下图：往期专题内容）</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7y3d96i1jj20hs0qo77i.jpg" alt=""></p>
<p>而下面的列表则采取了非常灵活的组织方式，在我试用的十几天里变换了若干次，有些section是突然出现的（当然这也是运营人员在不断地摸索，最近一两周内已经趋于稳定），而所有的section都在不定时更新。其更新策略我不太确定，但推测也是人工干预主推内容的。</p>
<p>到目前为止我们已经看到了这个程序在内容展现上的一大特点：有一双看不见的手在精心安排。哪怕（除了“专题”外）几乎所有的内容都是用户自己产生的，在展现上也是经过了足够的权衡而成。</p>
<h3 id="互动"><a href="#互动" class="headerlink" title="互动"></a>互动</h3><p>内容吸引人，展现得有趣，这些只是吸引用户驻足的一面，而让用户真正扎下根来，靠的还是互动。</p>
<p>程序中有许多网友自己建立的小组，在安装程序当天我就加入了一个：</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7y3du7aifj20hs0qo75j.jpg" alt=""></p>
<p>不过小组只是作为内容聚合的另一种纬度存在的，也相当于在程序内增加了一个自己感兴趣的RSS feed。</p>
<p>在潜水了多天之后，7月2号，我上传了自己的第一批东西，没想到迅速收到了几条回复，这促使我发了一条微博：</p>
<blockquote>
<p>这个格子箱做得很好啊，最开始是觉得各种编辑专题很不错（包括相机显示器等东西的选购，最近甚至有剃须刀和Lamy笔），后来发现社区也颇活跃，刚试着传了几个东西就一堆回复……之前完全没有听说过，哪儿来的这么多用户= =</p>
</blockquote>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7y3ezv8c4j20b60hswfe.jpg" alt=""></p>
<p>这与上次产品会中讨论的，用户在得到来自别人的认同感时会产生继续分享的愿望，是一致的。</p>
<p>所以再往后就是一个良性循环。</p>
<p>7月2日上传物品3件，7月4日13件，7月5日发状态一条，物品2件，7月7日发物品6件，7月8日12件，7月9日8件，7月11日3件，7月12日3件，7月13日1件，7月14日13件……</p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79jw1f7vttdwg6cj21kw10jafk.jpg" alt=""></p>
<p>你分享的东西越多，收到的回复就越多，于是你就越有动力继续发。甚至，你会发现与自己兴趣类似的人，当他们更新了某些东西时，你会想到自己也有相关的东西，于是也会找出来分享：</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f7y3g63x9zj20hs0qo428.jpg" alt=""></p>
<p>在此图中，因为我在前几天刚刚传了一大堆收藏的科幻小说上去，并且与几个人聊了不少，所以这位“思思”看到又有人传科幻时便想起了我，而我在看到这张时则又去找了几本前几天懒得拍照上传的科幻书分享。这就是良性循环的开始。</p>
<p>而这里面最关键的第一推动力，就是最开始的那几条回复。（我后来很怀疑其中有该公司内部人士）<br>互动还包括一种形式，就是与App运营人员的互动。在对这款app的试用中，我多次感到（虽然是隐式的）在受到运维人员的影响。如图：</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7y3ip4jmkj20hs0qo40o.jpg" alt=""></p>
<p>截图日期是7月10日，即运营人员发现我在几天之内上传了若干物品，比较活跃后，立即将我加入了“人物”这个section。毋庸置疑，这对一个新人的正面影响还是比较大的。</p>
<p>7月11日，我则发现自己又进入了“热门人物”：</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7vu4d8l5dj216o1kwdmj.jpg" alt=""></p>
<p>还有件好玩的，在我最近一周趋于沉寂时，今晚突然发现自己又被app放到了首页“箱子推荐”里面（下图），想必是想用可能带来的加关注和新回复提醒来让我继续回来。（当然，我的箱子也确实有点货值得推荐）。</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7vu6gwde8j20hs0qoaca.jpg" alt=""></p>
<h3 id="改版"><a href="#改版" class="headerlink" title="改版"></a>改版</h3><p>在试用过程中，此程序除了上面说过的变化分栏形式外，还有一次大的升级，下图是某次打开后的升级提示：</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7vu8chsyzj216o1kwjz0.jpg" alt=""></p>
<p>自我下载后的几版升级都截了图，按时间顺序从左到右列于下方。</p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79jw1f7vu9pn8b6j21kw0whtjw.jpg" alt=""></p>
<p>可以看到运营人员的尝试，到最新一版时，把最上面的面积大幅缩小，同时不再限于专题，而是把精选的用户物品也展现出来，更加发挥了此app的精髓和竞争力所在。</p>
<p>由于有社区的存在，此app每次改版的特点是，会有大量用户参与讨论，并且会很快得到答复。这是7月19号2.2版上线后我对此版本的评价，以及就在当天得到的回复。</p>
<p><img src="http://ww2.sinaimg.cn/large/5613ec79jw1f7vuqka3ucj21kw137dsy.jpg" alt=""></p>
<p>让每个人都有参与感，让人人都成为某个圈子的一份子，让每个ID和头像后面都成为独一无二的人，邀请活跃用户加入到整个程序构架的讨论（并且得到回复），这就是这个app给人的体验。</p>
<h3 id="理念"><a href="#理念" class="headerlink" title="理念"></a>理念</h3><p>翻回头来，让我们从底层探讨一下——这款app的理念是什么，它怎么就笃定用户有分享的欲望？</p>
<p>仅说我个人的体会，我认为每个人都会有自己的爱好，有自己的倾向性，正是这些让你成了你自己而不是其他人。在不同的人到当下或长或短的人生中，或多或少会有些自己的收藏，像手办这样正式的也好，过生日时别人送的随便什么东西也好，家中的每一个藏品实际上都是一个故事。</p>
<p>那么问题就来了，收藏一直以来就是个颇个人化的体验，只对自己有纪念意义的不说，就算是大众能理解的物品，真正至于邀请别人到家中欣赏的也毕竟是少数。结果就是，我收集了许多东西，却只能孤芳自赏。</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79gw1f7y3lis99dj216o1kw7jf.jpg" alt=""></p>
<p>SNS带来了一些改变，但他们无法解决的问题是，SNS唯一的纬度是时间即Timeline，3天之前的新鲜事是无人问津的。从组织形式上讲，这就与物品和故事的分享相悖。当然还有个问题，过分在SNS上晒物品有装逼嫌疑。</p>
<p>“格子箱”不属于创新，“格子”的概念来源于现实，这与苹果具象化的设计理念直接对应，其效果也非常好，用法一目了然。在最开始，该app一直宣称是“整理强迫症人士必备的软件”云云，口号是“生活、购物、分享”，这个定位非常狭窄。我曾经在微博说，我完全懒得整理，只喜欢收集。结果到最新的2.2版，口号已经换成了“用‘物’感受生活”，这与我上面说的“藏品背后有故事”已经非常接近。</p>
<p>实际上，在旅行的体验上，也有着相似的情况。首先，旅行体验实际上也是个非常个人化的过程。每个人在每个地方都有自己的经历和故事，但这些经历大多只和当时有关。你在青旅偶遇了什么旅伴，你在当地碰巧赶上焰火表演，这是人愿意分享的，但与其他人并无太大关系。其次，在SNS上的Timeline flood情况依然存在，我这次去广州的事儿总不能说半年吧，那过后的这些故事难道就被掩埋在几千条微博之中了吗？</p>
<p>所以，在旅行的问题上，我们需要个“格子箱”来整理自己的旅行经历，当建立起一个行程（格子）之后，他最好可以从微博抓取当时的故事并按时间排列；可以从Camera roll抓取照片并自动填充进去；……</p>
<h3 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h3><p>前面说的都是这款app值得学习的地方，最后提一下不足之处，那就是其<a href="http://weibo.com/gezbox" target="_blank" rel="external">官方新浪微博</a>。当我看到这个帐号的时候，简直难以相信其中的内容是和那些日志和专题出自同一个团队之手，该官博更新的内容与其他官博并无太多不同，几乎没有发挥出自己本身的优势。当然，我只尝试往新浪微博同步了一条微博，就在第二天被该官博转发了，他还是多少往正确的方向做了些努力，虽然远远不够。</p>
<p>摘抄前几天我发的微博：</p>
<blockquote>
<p>微博上营销帐号的策略实在是……我关注你是为了看你贴这些三流笑话的么 可好像大部分的官微都是这德性= = 我觉得还是要发和自己相关的东西，提供信息；信息量不够维持的话就互动；还不够维持的话像当年大众软件那样编编辑部故事也好啊！当年买大软一半的原因是看他们编辑部又发生什么了！</p>
</blockquote>
<hr>
<h3 id="来自2016年的补充"><a href="#来自2016年的补充" class="headerlink" title="来自2016年的补充"></a>来自2016年的补充</h3><p>格子箱倒掉很久了，联想到我上一家公司的经历，这样的结果并不意外。</p>
<p>一款产品，有核心用户是好的，但是又是没什么用的——我们之前的产品Boss经常说类似的观点，虽然听起来有些刺耳，但不得不承认有一些道理。</p>
<p>作为创业公司，只有能让你盈利的用户才是好用户。这是颠簸不破的真理。</p>
<p>事实上，现在想起来，格子箱和什么值得买在最初时有迥异的切入点，最后什么值得买活了下来，还把格子箱之前做的东西（晒物、购物比较）给做了。</p>
<p>原因就在于，什么值得买的切入点，自带盈利属性啊。</p>
]]></content>
    
    <summary type="html">
    
      从产品的角度，剖析了这款app在设计和运营上一些打动自己的亮点。
    
    </summary>
    
      <category term="产品设计" scheme="http://zshowing.github.io/categories/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="iOS" scheme="http://zshowing.github.io/tags/iOS/"/>
    
      <category term="App" scheme="http://zshowing.github.io/tags/App/"/>
    
      <category term="产品设计" scheme="http://zshowing.github.io/tags/%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>在路上</title>
    <link href="http://zshowing.github.io/2010/08/23/on-the-road/"/>
    <id>http://zshowing.github.io/2010/08/23/on-the-road/</id>
    <published>2010-08-23T02:24:11.000Z</published>
    <updated>2016-09-19T03:48:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>是的，那句话叫<em>“Everything that has a beginning has an end”</em>。</p>
<p>“Beginning”的那天我记得还很清楚，记忆里那天似乎特别的长，我办了一堆一堆的事儿，见了一堆一堆的人（这其中就包括振奋人心的同乡会乡长Noldo大人扫楼^^），最后是在一片灿烂的夕阳下，俺从思源湖畔把爹娘送出校门。虽然回到宿舍后心情确实有点空落落的，但似乎晚上就在语文能力测试中奋笔疾书写下了篇气势雄浑的作文，紧接着第二天就去ACM补招现场跃跃欲试……那时的我，就像早上八九点钟的太阳，觉得世界是我的，也是他们的，但终究结底是会属于我的。</p>
<p>正如每个好的剧本，接下来的事情有些曲折。由于各位看官对于这些已经熟知，那么可以简而化之分为几个阶段：</p>
<ul>
<li><p>挣扎期<br>  <em>2005.9 - 2008.4</em><br>  时间标志是GRE机考考完（这段时间里其中有多个起伏，不细分） 这段时间里的典型事件是一直在不停地歇斯底里地尝试把包括GPA、托福和GRE在内的分数搞上去。</p>
</li>
<li><p>放弃并重新思考期<br>  <em>2008.4 - 2008.10 - 2008.11</em><br>  时间标志是1.十一从北京回来；2.开始钻研Photoshop并制作BBS进站画面 这段时间的典型事件是对于一切成绩均放弃追求高分，不在乎其高低，以及一系列思考文章的诞生，其中《钟鼓楼》等文章和后面的讨论令我至今记忆犹新，甚至我觉得以前的生活都是糊里糊涂，直到这时才真正动脑子开始想人活一世到底该怎么活、为什么活。</p>
</li>
<li><p>“在路上”时期<br>  <em>2008.11至今</em><br>  这段时期的典型事件是：抓紧闲暇时间进行频繁的不惜命的旅行（毫不夸张，随便挑一个月的旅行次数就超过05到08年的总和，因为那时处于疯狂学习状态）、疯狂攫取各种知识、反复尝试包括PS、写作、摄影在内的各种工作，等等。</p>
</li>
</ul>
<p>也正因此，现在虽然到了“The end”，我却不用这个作题目，我用“在路上”。</p>
<p>我承认这个词的来源很俗套，是电视剧《血色浪漫》中形容钟跃民的处事风格的。当时只是觉得受震动，而把它真正作为自己的行事准则是在思考期的讨论之后，尤其是<a href="https://zshowing.wordpress.com/2009/07/01/%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B%E9%A9%AC%E5%A7%90%E7%9A%84%E5%9B%9E%E5%A4%8D/" target="_blank" rel="external">马姐对于《钟鼓楼》的回复</a>，让我受益颇多。“在路上”是一种处世的态度，他从不把自己固定在同一个位置过久，从不错过任何没有经历过的新奇。人生是为了什么？这一派人的答案是，人生是为了体验，体验是为了创造。</p>
<p>另外要感谢<a href="http://www.houxiaodi.com/" target="_blank" rel="external">朋哥</a>，大三开学不久（2007.9）认识的他，当即被他的经历和谈吐震撼；而后来对某手册更是相见恨晚，因为该书完全解决了我在挣扎期（主要是大一）的首要矛盾——课堂和考试的低效、无用、无聊却又“不得不好好学”与本身想学习真金白银能用得上的知识的矛盾。该书的核心思想对于我最后行事风格的确立有重要作用。</p>
<p>永远不安定，永远在路上。我是这么提醒自己的——我把“在路上”用作我豆瓣上的签名，得有快两年了吧，一直没有更换过；而我基本上也是这么做的。回北京之后我会最终如何？我现在猜不到，也许任何人都猜不到，因为路，并不是铺就好的。</p>
<p>那么现在我只知道，我已走完了这五年在上海的这段路。这条路走下来，我没有什么名堂，没有太大能力，但却比以往的任何时候都有主心骨。</p>
<p>而这路上的下一站，是北京。</p>
]]></content>
    
    <summary type="html">
    
      大学毕业回京之前，对整个大学生活的回顾。
    
    </summary>
    
      <category term="Life" scheme="http://zshowing.github.io/categories/Life/"/>
    
    
      <category term="Life" scheme="http://zshowing.github.io/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>沟通障碍有福音</title>
    <link href="http://zshowing.github.io/2010/06/15/cure-for-those-who-had-difficulties-with-communication/"/>
    <id>http://zshowing.github.io/2010/06/15/cure-for-those-who-had-difficulties-with-communication/</id>
    <published>2010-06-15T04:42:41.000Z</published>
    <updated>2016-09-17T12:47:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>最早关注邵小毛是因为她的才气和声音，当然，还有各种萌=.=<br>（参见我的“聪明大于身高，才气胜过身材，萌压倒一切”三定律）</p>
<p>不过去了她的巡演才发现，这姐们儿和我一样，居然也是个沟通障碍……</p>
<p>演出的一首曲目叫《沟通障碍有福音》，就是上面视频里的那首歌（不过不是我去的那场）。她说这首歌写的就是她涉足音乐的初衷，就是因为自己在沟通上有障碍，所以才用音乐去表达自己。然后我一下就想起了她之前的话，怪不得会让我那么熟悉——</p>
<p>巡演上海站，她是这么开场的：</p>
<blockquote>
<p>“大家好，我是邵夷贝（引入话题）……</p>
<p>终于来到了这个特殊时期的人潮汹涌的上海滩（拿出事先准备好的段子）……</p>
<p>感谢大家来看我的巡演（真正要说的话）……</p>
<p>嗯……（在想词）</p>
<p>不太会说，那就唱吧……（放弃继续说下去的努力……）”</p>
</blockquote>
<p>这整个流程我十分理解啊，因为这就是我无数次做过的=.= 真正灵光闪现的也就是“事先准备好”的那一段，之后就迅速被打回原形……</p>
<p>回来之后看她po上网的总结日记，又看到了这样的话：</p>
<blockquote>
<p>“我上台前在后台连蹦带跳叽哇乱叫了一阵子，连后台的保安都不得不和我说‘加油’安慰我…这次上台前实在是紧张，心虚得要死…”</p>
</blockquote>
<p>也是和我如出一辙，只不过我是在心里叫罢了=v=</p>
<p>然后又去查了她更早的日记，在《沟通障碍是不是福音》这篇中，也提到：</p>
<blockquote>
<p>“有时候我也反省，小时候觉得这是酷，后来觉得这是矫情，再后来不得不承认这是沟通障碍。如果让我写字，哪怕写短信，我都表情感叹号一大堆。但是一到面对面，我就囧脸一张，同一表情持续一晚上，十个问题踢不出一个P来。”</p>
</blockquote>
<p>想起去年这个时候和水源某id见面后也很受刺激，之前准备了一堆话题但纷纷只支撑了几分钟便不支败下来。。。。最后很快变成了只能顺着对方的话题说=.= 那是我对自己贫瘠的找话题聊天能力最有深刻体会的一次。。。。关键问题是对方还是很能聊天的那种，不是和我一样不会聊天的……唉，就像这首歌里唱的，“表达想法对我来说永远是问题，为什么大脑和嘴巴之间有那么远的距离”。。。</p>
<p>不过就像那句话说，“上帝关上一扇门，必将打开一扇窗”。不善言谈的小毛在音乐上才气纵横，我虽然不会作曲，至少在文字表达上没有障碍，可以把自己的感受用文字比较准确地写下来。</p>
<p>这就是所谓“沟通障碍有福音”。</p>
<hr>
<p>附 《沟通障碍有福音》</p>
<blockquote>
<p>曲/词/唱 邵夷贝</p>
<p>星期六的下午 他就突然出现在我面前<br>心中礼炮乱响 好像已经征服整个世界<br>该怎么办 我却说不出对他的想念<br>冒出一句 你头发好乱<br>头上一直冒汗 不知怎么才能解释明白<br>多想他能发现 我的口是心非心有不甘<br>不想隐藏 被他吸引的磁铁心脏<br>可是外表没有正负极的表象<br>表达想法对我来说 永远是问题<br>为什么大脑和嘴巴之间 有那么远的距离<br>可不可以制造一个 表达的加速器<br>让我给你一个真实的自己<br>不会表达的人 总是因为沉默而被错过<br>多么希望说话 只是通过一种条件反射<br>请赐一种 不能取代的表达法则<br>让紧闭的心经常透一透气<br>表达想法对我来说 永远是问题<br>为什么大脑和嘴巴之间 有那么远的距离<br>可不可以制造一个 表达的加速器<br>让我给你一个最真实的自己<br>可以拿着吉他 五三二三一三唱歌来听<br>希望你能明白 我的歌词就是我的心情<br>弦已走音 你却安静地安静地倾听<br>我很爱你 可不可以</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      《沟通障碍有福音》是邵夷贝的一首歌，我发现它完全描写了我自己。
    
    </summary>
    
      <category term="Life" scheme="http://zshowing.github.io/categories/Life/"/>
    
    
      <category term="Life" scheme="http://zshowing.github.io/tags/Life/"/>
    
      <category term="自我剖析" scheme="http://zshowing.github.io/tags/%E8%87%AA%E6%88%91%E5%89%96%E6%9E%90/"/>
    
      <category term="Music" scheme="http://zshowing.github.io/tags/Music/"/>
    
  </entry>
  
  <entry>
    <title>我做PS的若干特点</title>
    <link href="http://zshowing.github.io/2010/02/05/Summary-about-designing-with-Photoshop/"/>
    <id>http://zshowing.github.io/2010/02/05/Summary-about-designing-with-Photoshop/</id>
    <published>2010-02-04T18:25:11.000Z</published>
    <updated>2016-09-17T05:47:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>此处PS=Photoshop，不是Personal Statement，正在申请出国的各位学弟学妹切勿激动。</p>
<p>昨天做完了石导拜托的海报，突然觉得自己每次做PS都有些很有趣的共同特点。玩Photoshop也不短了，不妨试着总结一下。</p>
<h3 id="素材库"><a href="#素材库" class="headerlink" title="素材库"></a>素材库</h3><p>每次拿到自由发挥的任务先到自己的“素材库”找灵感。</p>
<p>这里的“素材库”包括两块，从<a href="http://bbs.themex.net/" target="_blank" rel="external">Themex论坛</a>存的900多张Wallpaper，和自己这一年来照的5000多张相片，其中前者功劳最大，也是我每次必花时间过一遍的项目。在过这一遍的过程中，一是可以直接从这些壁纸中找素材，二是可以从这里面包罗万象的内容和创意中激发灵感，起到辅助头脑风暴的作用。我的照片库由于数量太大，相比之下内容也偏单一，所以一般都是脑子想到了一些灵感再去查找。</p>
<p>因为这个原因，我一开始从Themex下壁纸还是纯爱好，后来就变成了一种有意识的储备——我知道，这个素材库的数量决定了我灵感火药库的弹药储备状况。</p>
<p>一般情况下我都会先定下四个以上的不同方案待实现，然后再去各处（Flickr、Google Images、Baidu图片等等）找素材，再一一尝试实现，最后限于素材、技术等因素，还没有全部实现的情况。</p>
<p>例子：“豆瓣电台明信片计划”之“超级马里奥”，就是先在Wallpaper文件夹看到了一张Mario的壁纸，激发了灵感，然后在网上搜来另外的素材图完成的：</p>
<p><img src="http://ww3.sinaimg.cn/mw690/5613ec79gw1f7wh5zhcwtj21d80ygdm7.jpg" alt=""></p>
<p>例子：“Science板水源BBS进站”这个任务，就是想到了之前拍的这张照片，然后一口气完成的文案、构图和后期整合：</p>
<p><img src="http://ww1.sinaimg.cn/large/5613ec79gw1f7wh6l9m6gj20jg0b4dkk.jpg" alt=""></p>
<h3 id="素材的搬运工"><a href="#素材的搬运工" class="headerlink" title="素材的搬运工"></a>素材的搬运工</h3><p>总是在现成的图上加工，极少自己设计。</p>
<p>其实这个限于两点：我的出身——非设计专业出身，和我的设备——没有手绘设备。而且，我还很烦鼠绘……</p>
<p>所以我一直觉得，我到现在为止唯一称得上是“设计”的作品是那幅人大附中柜门号码加工出的“RDFZ”，只有这个是我真正从无到有一点点做出来的，其他的都是加工。</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79gw1f7wh7j8rrwj20iw07sab4.jpg" alt=""></p>
<h3 id="模仿"><a href="#模仿" class="headerlink" title="模仿"></a>模仿</h3><p>啥都想模仿一下。</p>
<p>在Themex看到别人的签名档好看，就一口气做了三四个；看到有人给漫画原画上色，我就也抓了幅当时正在看的《I`S》的原画来上色；看到Dreamxis设计的UI漂亮得令人发指，就模仿着弄了个“你丫是好人”的对话框……</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79gw1f7wh8rdvnkj20i208c0u9.jpg" alt=""></p>
<p>其实这有利于PS的进阶，因为一切技术都是在练习中才能进益的。自己的东西在某种程度上也建立在模仿的基础上。</p>
<p>更多的心理因素暂不分析——困了- – 写完睡觉了……</p>
<p><img src="http://ww1.sinaimg.cn/mw690/5613ec79gw1f7wh9bo4tgj21560uttrb.jpg" alt=""></p>
<h3 id="蓝色控"><a href="#蓝色控" class="headerlink" title="蓝色控"></a>蓝色控</h3><p>无可救药地喜欢蓝色。</p>
<p>这涉及到我一贯的色彩偏好……其实这一点可以更概括一些，概括成“无可救药地喜欢纯色”。这从我刚开始玩PS时给自己接的那单活儿“北京板水源BBS进站”就有所意识了，那四格里四种纯色的搭配让我自己爱不释手；在后来的案例中，我最爱的也是大片绚丽的纯色。我曾经给自己一个评价：“视觉动物”，当时是因为我仅仅由于某些软件的界面太难看就把他们弃用了，这一点用来解释我对绚丽纯色的偏爱十分贴切。</p>
<p>顺便提一句，我估计是由于我喜欢纯色的缘故，我也特别喜欢简洁风。我喜欢画面干干净净，清清爽爽的，不喜欢杂乱。</p>
<p>后来拿北京板进站做的签名档，四格代表的是北京的四季：</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79gw1f7whac3gtkj20go046dh2.jpg" alt=""></p>
<p>给石导做的海报，上面那蓝色让我自己心醉至今- – 这也是这篇文章写作的动因之一：</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79gw1f7whhk14fxj20ci0goq4w.jpg" alt=""></p>
<p>例子：应一个朋友的请求帮忙做的BBS进站，灵感来自于豆瓣友邻<a href="https://www.douban.com/people/hayibala/" target="_blank" rel="external">@小哀</a> 拍的<a href="https://www.douban.com/note/35071692/" target="_blank" rel="external">照片</a>：</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79gw1f7whjkrpfbj20jg0b4n0p.jpg" alt=""></p>
<h3 id="没事找事"><a href="#没事找事" class="headerlink" title="没事找事"></a>没事找事</h3><p>喜欢给自己没事找事。</p>
<p>我目前为止完成的任务中，别人找到我的占不到一半，剩下的都是我看到有活儿主动揽过来的——完全义务，不收报酬，还承担售后服务。</p>
<p>以前的日志里我分析过，这是我渴望得到别人肯定的表现，然后大家的评论表示，所有人都有这个心理……</p>
<p>08年CS板板衫设计，典型的没事找事。当时我还根本不怎么会用PS呢，这个设计图现在看来和垃圾似的……</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79gw1f7whm54zk7j20b209k3yp.jpg" alt=""></p>
<p>说真的，不管是什么样的活儿，做完了都会有这样那样的收获，这种收获是你看教程的时候怎么也学不到的。</p>
<p>我说不清Photoshop具体给我带来了哪些东西，是一种“我在活着”的存在感？一种“我能思考、我能创造”的欣慰感？还是一种“我还不错”的自我认同感？</p>
<p>我只确定一件事情，就是这个过程，这些作品，这所有的一切，都能带给我快乐。</p>
<hr>
<p>P.S 在这个过程中，有一件事情让我后来每次想起的时候都会感慨。</p>
<p>李文昕（天哪，我居然一直都没念对她的名字），上海交大机动学院工业工程与物流工程系06级硕博连读生，2008年10月21日突发高烧，30日晚出现口腔血块，11月1日回长沙，3日确诊，白血病。</p>
<p>记得清楚，那是2008年11月20日夜，Sean在MSN上叫我，问我能不能帮忙做个进站。然后说明了情况。</p>
<p>我当即答应了下来，跑完步回宿舍之后就开始着手找素材。</p>
<p>现在我的硬盘里还保存着这幅图的原件，其最后修改时间是——2008年11月21日，凌晨4点09分。</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79gw1f7whn4p0qxj20jg0b4n04.jpg" alt=""></p>
<p>后来还发生了好多事情，好多好多，学校里的募捐，水源站庆晚会上来自化疗室的VCR……我们听到了很多好消息，听到李文昕学姐配型成功，移植成功，病情稳定，一系列的消息……</p>
<p>因为，仅仅是因为做过这张进站，我对这些所有的消息，都比别人有种更复杂的感情。</p>
<p>谁知道最后，等来的却是这个消息：<br>讣告。<br>时间是2009年11月15日。</p>
<p>这段经历有没有对我的”不安全感“起到推波助澜的作用？我同样不知道。<br>我还是要说那句被说滥了的话——生命，太脆弱了。</p>
<h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>发现当年结尾结的好沉重……</p>
<p>这次用评论里yingzhi.ma学姐的留言结尾吧：</p>
<blockquote>
<p>支持硕哥，一直坚持着自己喜欢的东西，摸索着自己的路。套用托尔金爷爷笔下人物的一句话：<strong>无论你去向何方，愿你找到光明</strong>。</p>
</blockquote>
<p>必须要说，在坚持走自己喜欢的路这件事上，马姐和其他好多人，其实是我的榜样。</p>
]]></content>
    
    <summary type="html">
    
      总结了一些自己在用Photoshop进行设计时的习惯，算是小小的“设计风格”。
    
    </summary>
    
      <category term="Design" scheme="http://zshowing.github.io/categories/Design/"/>
    
    
      <category term="Design" scheme="http://zshowing.github.io/tags/Design/"/>
    
  </entry>
  
  <entry>
    <title>Words on Photography</title>
    <link href="http://zshowing.github.io/2009/04/20/Words-on-Photography/"/>
    <id>http://zshowing.github.io/2009/04/20/Words-on-Photography/</id>
    <published>2009-04-19T18:03:46.000Z</published>
    <updated>2016-09-17T01:34:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>题目其实有问题。以前拿手机照相，只能叫“记录”；现在拿卡片机照相，可以叫“照相”；如果用上单反或者准单反，那才能叫“摄影”。</p>
<p>不过不管怎么说，自从2月13日可以照相以来，还是有一些体会的。</p>
<h3 id="无限重复"><a href="#无限重复" class="headerlink" title="无限重复"></a>无限重复</h3><p>最早的感触来自我的一些习惯性兴奋点，我发现我总是喜欢照一些具有“无限重复”特征的，看上去很有纵深感的景物。比如：</p>
<p>这样一排的自行车：</p>
<p><img src="http://ww2.sinaimg.cn/mw690/5613ec79jw1f7wbfvm15aj21kw2dc1ky.jpg" alt=""></p>
<p>这样一排的旗杆：</p>
<p><img src="http://ww3.sinaimg.cn/mw690/5613ec79jw1f7wbgl0amvj21kw16odx6.jpg" alt=""></p>
<p>或者这样取很小的角度拍一段很长的建筑物:</p>
<p><img src="http://ww2.sinaimg.cn/mw690/5613ec79jw1f7wbicthqwj21kw2dc4qq.jpg" alt=""></p>
<p>我发现每次当我见到类似的景物时都会忍不住想去拍，哪怕那是再普通不过的景物，比如一排普普通通的护栏，一堵长长的砖墙等，然后就开始刻意去扳——因为确实有许多拍出来是没什么价值的。这样的纵深感固然感觉好，但却太过刻意太过死板，偶尔为之尚能让人眼前一亮，若泛滥则毫无美感可言，只剩矫揉与造作之嫌。我对这种倾向的自我评价是三个字：“反自然”，因为自然界中很少有这样严格无限重复的景致，自然界之美在于随机与变化。而我偏偏对重复感兴趣，不愧是现代人类一只。</p>
<h3 id="大块纯色"><a href="#大块纯色" class="headerlink" title="大块纯色"></a>大块纯色</h3><p>然后后来我又发现了自己的第二个特点：喜欢照大块的纯色。比如：</p>
<p>苏州，拙政园：</p>
<p><img src="http://ww3.sinaimg.cn/mw690/5613ec79jw1f7wbk7wjp1j21kw11x19i.jpg" alt=""></p>
<p>苏州，虎丘山顶：</p>
<p><img src="http://ww1.sinaimg.cn/mw690/5613ec79jw1f7wbl8holrj21kw2dc7wh.jpg" alt=""></p>
<p>苏州，狮子林：</p>
<p><img src="http://ww1.sinaimg.cn/mw690/5613ec79jw1f7wblzhjjuj21kw11xwvf.jpg" alt=""></p>
<p>这是在苏州玩的两天里照的照片中的3张，可以看到3张的构想都是同样风格的。我很明显地发现我总是拿镜头往屋檐那里瞄，好像周围游客很少有照屋檐的=。= 在BBS也有网友回复说“视角很独特的苏州园林”……当然，也正赶上那两天阳光都很赞，天蓝得让人感动，要不我可能不会总想着照蓝天了吧。</p>
<h3 id="偏角构图"><a href="#偏角构图" class="headerlink" title="偏角构图"></a>偏角构图</h3><p>接着我又发现其实我就是喜欢这样有一个景物占个角、其他部分放空的构图，不光自己喜欢这么照，看到别人有类似的作品也会很兴奋。比如前几天在BBS的海南板看到他们在爆桌面，我偶然看到了这张：</p>
<p><img src="http://ww3.sinaimg.cn/large/5613ec79jw1f7wbry7lcxj20rs0hd7aa.jpg" alt=""></p>
<p>我立刻就被点燃了，一个“跪求原图”就回了上去。。。结果现在我和这张图的拍摄者莫少已经在校内加为好友了，哈~很喜欢他的摄影~在这里<a href="http://www.flickr.com/photos/mervynmo/" target="_blank" rel="external">http://www.flickr.com/photos/mervynmo/</a></p>
<h3 id="有关虚焦"><a href="#有关虚焦" class="headerlink" title="有关虚焦"></a>有关虚焦</h3><p>然后想说的是设备问题。之前我很喜欢虚焦的效果，以为买了相机就能实现那种效果的，结果果然还是得有好的参数才能达到，我这小卡片只能在5cm的范围内实现虚焦，比如：</p>
<p><img src="http://ww4.sinaimg.cn/mw690/5613ec79jw1f7wbucxjzlj21kw11xqka.jpg" alt=""></p>
<p>在我刚确认这台相机没法实现普遍意义上的虚焦时，还有点郁闷，但后来也就释然了，因为看了好多单反的片子，纯粹就是仗着性能好，每张都是虚焦效果。本来以为这是多么高深的技术，却发现是如此滥俗的效果，唉，罢。</p>
<h3 id="有关选景"><a href="#有关选景" class="headerlink" title="有关选景"></a>有关选景</h3><p>今天上午在校内看了一个叫mc的同学拍的照片，100张从头一口气看到尾，居然一点都不嫌多，还想接着看下去。她的照片给了我许多灵感，让我想了很多。我以前拍照时总是刻意忽略一些“看不出特色”的景物，我们来看下面几张：</p>
<p><img src="http://ww4.sinaimg.cn/large/5613ec79jw1f7wbvt6rorj20b50goac4.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/5613ec79jw1f7wbvt5gz8j20b50got9i.jpg" alt=""><br><img src="http://ww2.sinaimg.cn/large/5613ec79jw1f7wbvt73kmj20b50gojt1.jpg" alt=""></p>
<p>这三张里（这就是从mc相册里选的），只有第三张我“有可能”会拍，其他两张我会觉得，“这也看不出是在哪里啊，恨不得在家里都能摆出这样的静物，有什么拍的必要呢？”但是在用心看完mc的这组照片过后，我真的有点被感动了，她用相机向我们诠释了什么叫做体味生活的瞬间，诠释了什么叫做艺术来源于生活而高于生活。在拍照时，真的不应该那么的“功利”，倘若是美好的景物，纵然看不出什么“地方特色”，只要能给人艺术的美感，又何妨一照？这也许不是可以拿来展示的作品，但这却是实实在在的生活味道。</p>
<p>也许她看不到，不过我还是要感谢mc，谢谢你~</p>
<p>行文至此，抬表观瞧，竟已近卯时。遂收笔，下面的时间，是众看官的=)</p>
]]></content>
    
    <summary type="html">
    
      有关摄影的一些总结。
    
    </summary>
    
      <category term="Photography" scheme="http://zshowing.github.io/categories/Photography/"/>
    
    
      <category term="Photography" scheme="http://zshowing.github.io/tags/Photography/"/>
    
  </entry>
  
</feed>
